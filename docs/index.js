(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))o(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function r(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(a){if(a.ep)return;a.ep=!0;const s=r(a);fetch(a.href,s)}})();const ie=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(ie).catch(console.error);let C;async function ce(){var e,t;C=await((t=(e=navigator.wakeLock)==null?void 0:e.request)==null?void 0:t.call(e,"screen"))}async function le(){C&&(await C.release(),C=void 0)}const H={request:ce,release:le},y={width:30,height:24};function j(e){return e%2===0}function de(e,t,r){return e>=t&&e<=r}function ue(e,t=0,r=e.length){return e[N(r,t)]}function N(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function x(e){e.forEach(t=>{t.neighbors=me(t,e,y)})}function me({q:e,r:t,s:r,x:o,y:a},s,i){const d=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(l=>s.find(p=>p.q===e+l.q&&p.r===t+l.r&&p.s===r+l.s)).filter(Boolean);return o===0&&(d.push(s.find(l=>a===l.y&&l.x===i.width-1)),j(a)&&d.push(...[a<i.height-1?s.find(l=>a+1===l.y&&l.x===i.width-1):null,a>0?s.find(l=>a-1===l.y&&l.x===i.width-1):null].filter(Boolean))),o===i.width-1&&(d.push(s.find(l=>a===l.y&&l.x===0)),j(a)||d.push(...[a<i.height-1?s.find(l=>a+1===l.y&&l.x===0):null,a>0?s.find(l=>a-1===l.y&&l.x===0):null].filter(Boolean))),d}const f={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function F(e){e.forEach(t=>{const r=Math.random(),o=-1,a=de(r,.3,.7)?0:1*(-1*+(r<.3)),s=(i=>i<0?0:i>y.height-1?y.height-1:i)(t.y+a+o);t.temperature=pe(s)})}function pe(e){switch(e){case 0:case 1:case y.height-2:case y.height-1:return f.freezing;case 2:case 3:case y.height-4:case y.height-3:return f.cold;case 4:case 5:case y.height-6:case y.height-5:return f.temperate;case 6:case 7:case 8:case y.height-9:case y.height-8:case y.height-7:return f.warm;default:return f.hot}}function fe(e){switch(e){case f.hot:return f.warm;case f.warm:return f.temperate;case f.temperate:return f.cold;default:return f.freezing}}function _e(e){switch(e){case f.freezing:return f.cold;case f.cold:return f.temperate;case f.temperate:return f.warm;default:return f.hot}}const R=new Set([0,1,2,y.height-1,y.height-2,y.height-3]);function J(e){const o=e.length/2.5;let a=0;for(;a<o;){const s=N(13,4),i={x:N(y.width),y:N(y.height-3,3)},c=e.find(({x:p,y:w})=>p===i.x&&w===i.y),d=new Set(c.neighbors.filter(({y:p})=>!R.has(p))),l=new Set;a+=s,U(c),l.add(c);for(let p=0;p<s;p+=1){const w=ue([...d]);U(w),l.add(w),d.delete(w),w.neighbors.filter(b=>!l.has(b)).filter(({y:b})=>!R.has(b)).forEach(b=>d.add(b))}}e.filter(s=>s.elevation>0).forEach(s=>{const i=s.neighbors.filter(d=>d.elevation>0).length;if(i>=3)return;const c=Math.random();(i===2&&c>.7||i===1&&c<.7)&&he(s)})}function U(e){e.elevation+=1,e.elevation>1&&(e.temperature=fe(e.temperature))}function he(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=_e(e.temperature))}const m={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function ge(e){switch(e){case m.arid:return m.dry;case m.dry:return m.moderate;case m.moderate:return m.moist;default:return m.wet}}function W(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:r})=>r===u.sea).forEach(()=>{t.humidity=ge(t.humidity)})})}const n={people:"people",gold:"gold",cloth:"cloth",wood:"wood",stone:"stone",iron:"iron",food:"food",alcohol:"alcohol"},u={sea:new v("sea",{[n.food]:1}),mountain:new v("mountain",{[n.wood]:2,[n.stone]:5,[n.food]:3}),high_mountain:new v("high_mountain",{[n.stone]:5}),ice:new v("ice",{[n.food]:2}),tundra:new v("tundra",{[n.cloth]:1,[n.wood]:2,[n.stone]:1,[n.food]:5}),grassland:new v("grassland",{[n.cloth]:3,[n.wood]:2,[n.stone]:2,[n.food]:5}),savanna:new v("savanna",{[n.cloth]:5,[n.wood]:5,[n.stone]:3,[n.food]:6}),boreal_forest:new v("boreal_forest",{[n.cloth]:4,[n.wood]:10,[n.stone]:3,[n.food]:5}),forest:new v("forest",{[n.cloth]:2,[n.wood]:10,[n.stone]:2,[n.food]:5}),tropical_rainforest:new v("tropical_rainforest",{[n.cloth]:3,[n.wood]:7,[n.stone]:1,[n.food]:5}),cold_swamp:new v("cold_swamp",{[n.cloth]:1,[n.wood]:2,[n.stone]:1,[n.food]:2}),swamp:new v("swamp",{[n.cloth]:1,[n.wood]:1,[n.stone]:0,[n.food]:3}),tropical_swamp:new v("tropical_swamp",{[n.cloth]:1,[n.wood]:3,[n.stone]:1,[n.food]:3}),desert:new v("desert",{[n.cloth]:1,[n.wood]:0,[n.stone]:2,[n.food]:1}),extreme_desert:new v("extreme_desert",{[n.cloth]:0,[n.wood]:0,[n.stone]:1,[n.food]:0})},ye={[f.freezing]:{[m.arid]:u.tundra,[m.dry]:u.tundra,[m.moderate]:u.tundra,[m.moist]:u.boreal_forest,[m.wet]:u.boreal_forest},[f.cold]:{[m.arid]:u.tundra,[m.dry]:u.tundra,[m.moderate]:u.boreal_forest,[m.moist]:u.boreal_forest,[m.wet]:u.boreal_forest},[f.temperate]:{[m.arid]:u.tundra,[m.dry]:u.forest,[m.moderate]:u.forest,[m.moist]:u.forest,[m.wet]:u.swamp},[f.warm]:{[m.arid]:u.desert,[m.dry]:u.grassland,[m.moderate]:u.savanna,[m.moist]:u.forest,[m.wet]:u.tropical_swamp},[f.hot]:{[m.arid]:u.extreme_desert,[m.dry]:u.desert,[m.moderate]:u.grassland,[m.moist]:u.savanna,[m.wet]:u.tropical_rainforest}};function v(e="",t={},r=1,o=1){return{name:e,resource_production:Object.assign({[n.gold]:0,[n.cloth]:0,[n.wood]:0,[n.stone]:0,[n.iron]:0,[n.food]:0,[n.alcohol]:0},t),movement_speed:r,pleasantness:o}}function Y(e){e.forEach(t=>{t.biome=be(t)})}function K(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=we(t)})}function we(e,t=y.height){const r=Math.random();return[0,t-1].includes(e.y)?r<=.1?u.sea:u.ice:[1,t-2].includes(e.y)?r<=.75?u.sea:u.ice:[2,t-3].includes(e.y)?r<=.9?u.sea:u.ice:u.sea}function be(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?u.high_mountain:u.mountain:ye[e.temperature][e.humidity]}const Q=document.createElement("style");Q.textContent=Object.keys(u).map(e=>`[data-biome="${e}"] {
        fill: var(--${e});
    }`).join(`
`);document.body.append(Q);const ve=document.getElementById("add-player-btn"),A=document.getElementById("board"),T=document.getElementById("bottom-bar"),Ee=document.getElementById("cell-info"),k=document.getElementById("cell-production-forecast"),$e=document.getElementById("toggle-coord-system-btn"),D=document.getElementById("config-game-form"),V=document.getElementById("defs"),G=document.getElementById("end-turn-btn"),z=document.getElementById("overall-production-forecast"),Le=document.getElementById("phase-label"),q=document.getElementsByClassName("player-config"),Se=document.getElementById("player-name"),X=document.getElementById("player-setup"),Oe=document.getElementById("reroll-map-btn"),ke=document.getElementById("side-bar");document.getElementById("round-info");const Z=document.getElementById("selection-highlight"),qe=document.getElementById("start-game-form"),S=document.getElementById("start-game-overlay"),Me=V.querySelector(".cell-wrapper"),Be=V.querySelector(".player-border"),Ie=document.getElementById("player-config-tmpl").content,M={tent:O("Tent",[h(n.wood,1),h(n.cloth,3)],[]),textile_factory:O("Textile Factory",[h(n.wood,15),h(n.stone,15)],[h(n.cloth,5)]),lumber_mill:O("Lumber Mill",[h(n.wood,15),h(n.stone,15)],[h(n.wood,5)]),quarry:O("Quarry",[h(n.wood,15),h(n.stone,15)],[h(n.stone,5)]),forge:O("Forge",[h(n.wood,5),h(n.stone,5)],[h(n.iron,1)]),farm:O("Farm",[h(n.wood,5),h(n.stone,5)],[h(n.food,5)]),distillery:O("Distillery",[h(n.wood,5),h(n.stone,5)],[h(n.alcohol,1)])};function O(e="Pretty Structure",t=[h(n.wood,5)],r=[h(n.wood,1)],o=1,a={on(i){i.foo+=5},off(i){i.foo-=5}},s=[u.swamp]){return{display_name:e,construction_cost:t,unsupported_biomes:s,effects:a,output:r,required_workers:o}}function h(e=n.wood,t=1){return{resource_name:e,amount:t}}function ee(e,t,r,o,a,s,i){const c=Ce(e,t,r,o,a,s,i);let d=null,l=-1;return{cx:e,cy:t,x:r,y:o,q:a,r:s,s:i,neighbors:[],cell:c,elevation:0,humidity:m.arid,temperature:f.freezing,population:0,structures:new Map(Object.values(M).map(p=>[p,0])),resources:{},get biome(){return d||""},set biome(p){d=p,p&&(c.dataset.biome=d.name)},get owner_id(){return l},set owner_id(p){p!==void 0&&(l=p,p!==-1&&(c.dataset.owner_id=p))}}}function Ce(e,t,r,o,a,s,i){const c=Me.cloneNode(!0);c.setAttribute("transform",`translate(${e}, ${t})`);const d=document.createElementNS("http://www.w3.org/2000/svg","g"),l=document.createElementNS("http://www.w3.org/2000/svg","text"),p=document.createElementNS("http://www.w3.org/2000/svg","text"),w=document.createElementNS("http://www.w3.org/2000/svg","text"),b=document.createElementNS("http://www.w3.org/2000/svg","text");return l.textContent=a,p.textContent=s,w.textContent=i,b.textContent=`${r}, ${o}`,l.setAttribute("transform","translate(1.5, 2)"),p.setAttribute("transform","translate(4.5, 3.5)"),w.setAttribute("transform","translate(2, 5)"),b.setAttribute("transform","translate(1.5, 3.5)"),d.classList.add("cell-coord"),l.classList.add("cube-coord"),p.classList.add("cube-coord"),w.classList.add("cube-coord"),b.classList.add("offset-coord"),d.append(l,p,w,b),c.append(d),A.prepend(c),c}function te(e){const t=[...e.values()];return t.forEach(r=>Object.assign(r,{biome:null,elevation:0,humidity:m.arid,temperature:f.freezing,owner_id:-1})),F(t),J(t),K(t),W(t),Y(t),e}function Ne(e,t){const r=e.map(({cx:o,cy:a,x:s,y:i,q:c,r:d,s:l,biome_name:p,elevation:w,humidity:b,temperature:B,owner_id:g})=>Object.assign(ee(o,a,s,i,c,d,l),{biome:u[p],elevation:w,humidity:b,temperature:B,owner_id:g}));return x(r),re(r,t)}function Ae(e,t){const r=Pe(e);return x(r),F(r),J(r),K(r),W(r),Y(r),re(r,t)}function re(e,t){return e.reduce((r,o)=>(r.set(o.cell,o),r),t)}function Pe({height:e,width:t}){const r=[];for(let o=0;o<e;o+=1){const a=+!j(o);for(let s=0;s<t;s+=1){const i=s-(o-(o&1))/2;r.push(ee(s*6+a*3,o*4.5,s,o,i,o,-i-o))}}return r}const ne=.5,$=ne*.5;function oe(e,t,r){const o=[];e.reduce((s,i)=>{const c=i.neighbors.filter(g=>!e.includes(g)),d=Te(i),l=je(i),p=De(i),w=Re(i),b=Ue(i),B=ze(i);return c.find(g=>g.r===i.r&&g.s===i.s+1)&&s.push(`M${w}L${B}`),c.find(g=>g.q===i.q&&g.s===i.s+1)&&s.push(`M${B}L${d}`),c.find(g=>g.s===i.s&&g.r===i.r-1)&&s.push(`M${d}L${b}`),c.find(g=>g.r===i.r&&g.s===i.s-1)&&s.push(`M${b}L${p}`),c.find(g=>g.q===i.q&&g.s===i.s-1)&&s.push(`M${p}L${l}`),c.find(g=>g.s===i.s&&g.r===i.r+1)&&s.push(`M${l}L${w}`),s},o);const a=document.createElementNS("http://www.w3.org/2000/svg","path");a.setAttribute("d",o.join("")),a.setAttribute("stroke",t),a.setAttribute("stroke-width",ne),r.append(a)}function Te(e){return`${e.cx+3} ${e.cy+$}`}function je(e){return`${e.cx+3} ${e.cy+6-$}`}function ze(e){return`${e.cx+$} ${e.cy+1.5+$*.5}`}function Re(e){return`${e.cx+$} ${e.cy+4.5-$*.5}`}function Ue(e){return`${e.cx+6-$} ${e.cy+1.5+$*.5}`}function De(e){return`${e.cx+6-$} ${e.cy+4.5-$*.5}`}const He={human:"human",ai:"ai"};function ae(e){const t=Ie.cloneNode(!0);Object.assign(t.querySelector(".player-name-input"),{name:`player-${e}-name`,value:`Player ${e}`}),t.querySelectorAll(".player-type-select-radio").forEach(r=>{r.name=`player-${e}-type`}),X.append(t)}function se(e="Player Name",t=He.ai,r){const o=[],a=Be.cloneNode(!0);return A.append(a),{name:e,color:r,type:t,resources:{[n.people]:5,[n.gold]:5,[n.cloth]:25,[n.wood]:25,[n.stone]:25,[n.iron]:0,[n.food]:50,[n.alcohol]:5},border_path_container:a,get cells(){return o},set cells(s){o.push(...s),oe(o,r,a)},destroy(){o.length=0,a.remove()}}}function P(e,t=1){const r={[n.people]:0,[n.gold]:0,[n.cloth]:0,[n.wood]:0,[n.stone]:0,[n.iron]:0,[n.food]:0,[n.alcohol]:0};let o=0;return e.forEach(a=>{o+=a.population,Object.entries(a.biome.resource_production).forEach(([s,i])=>{r[s]+=i}),[...a.structures.entries()].forEach(([s,i])=>{s.output.forEach(({resource_name:c,amount:d})=>{r[c]+=d*i})});for(let s=0;s<Math.floor(a.population/2);s+=1){const i=Math.random();i<.3?r[n.people]+=2:i<.8&&(r[n.people]+=1)}}),r[n.gold]=o*t,r}let L=null;const E={land_grab:I("land_grab","Pick your origin","Confirm choice",(e,t)=>{if(e.owner_id===-1&&e.biome!==u.sea){const r=e.biome.resource_production,o=Object.values(M).filter(a=>!a.unsupported_biomes.includes(e.biome)).map(({display_name:a})=>`<li>${a}</li>`).join("");L=t,t.classList.add("clicked"),oe([...e.neighbors,e],"white",Z),k.innerHTML=`
            <h2>Cell Info</h2>
            <div>Biome: ${e.biome.name}</div>
            <div>Movement modifier: ${e.biome.movement_speed}</div>
            <div>Pleasantness: ${e.biome.pleasantness}</div>
            ...
            <h3>Production</h3>
            <div>Wood: ${r.wood}</div>
            <div>Stone: ${r.stone}</div>
            <div>Cloth: ${r.cloth}</div>
            <div>Food: ${r.food}</div>
            <h3>Supported structures</h3>
            <ul>${o}</ul>
            `}else k.replaceChildren()}),development:I("development","Distribute your wealth",void 0,(e,t,r)=>{if(e.owner_id!==r.current_player_id){const o=P(r.active_player.cells,r.active_player.tax_rate),a=Object.entries(o).map(([s,i])=>`<li>${s}: ${i}</li>`).join("");k.replaceChildren(),z.innerHTML=`
                <h2>Empire Overview</h2>
                <h3>Population</h3>
                ...
                <h3>Production</h3>
                <ul>
                    ${a}
                </ul>
                <form>
                    <h3>Tax Rate</h3>
                    <input
                        type="range"
                        name="tax_rate"
                        min="0"
                        step="1"
                        value="${r.active_player.tax_rate}"
                    >
                </form>
                `}else{const o=Object.entries(M).map(([i,c])=>`
                <label>
                    <div class="label-text">${c.display_name}: </div>
                    <input
                        type="number"
                        class="structure-builder"
                        name="${i}"
                        value="${e.structures.get(c)}"
                        min="0"
                    >
                </label>`).join(""),a=P([e],r.active_player.tax_rate),s=Object.entries(a).map(([i,c])=>`<li>${i}: ${c}</li>`).join("");L=e,z.replaceChildren(),k.innerHTML=`
                <h2>Cell Overview</h2>
                <h3>Cell Output</h3>
                <ul>
                    ${s}
                </ul>
                <form>
                    <h3>Build Structures</h3>
                    ${o}
                </form>`}}),movement_planning:I("movement_planning","Make your moves"),movement_execution:I("movement_execution","See what you have done")};function xe(e){return({target:t})=>{const r=Number(t.value);if(t.name==="tax_rate")e.active_player.tax_rate=r;else if(t.classList.contains("structure-builder")){const o=M[t.name],a=L.structures.get(o);if(r<0){t.value=a;return}const s=M[t.name].construction_cost;if(r>a){if(s.some(({resource_name:d,amount:l})=>l>e.active_player.resources[d])){t.value=a;return}s.forEach(({resource_name:d,amount:l})=>{e.active_player.resources[d]-=l})}else s.forEach(({resource_name:c,amount:d})=>{e.active_player.resources[c]+=d});L.structures.set(o,r),k.querySelector("ul").innerHTML=Object.entries(P([L],e.active_player.tax_rate)).map(([c,d])=>`<li>${c}: ${d}</li>`).join(""),e.update_resource_display()}}}function Fe(e){return()=>{if(e.current_phase===E.land_grab.name){if(L===null)return;e.board.get(L).owner_id=e.current_player_id,e.active_player.cells=[e.board.get(L)],L=null}e.next_turn()}}function I(e="round_phase",t=e,r="End turn",o=()=>{}){return{name:e,call_to_action:t,end_turn_btn_label:r,handler_function:o}}const _=(()=>{const e=[];let t=0,r=E.land_grab.name,o=0,a=null;function s(){G.textContent=E[r].end_turn_btn_label,Le.textContent=E[r].call_to_action,Se.textContent=e[o].name,r===E.development.name?(a=P(e[o].cells,e[o].tax_rate),k.replaceChildren(),z.innerHTML=`
                <h2>Totall Output</h2>
                <ul>
                    ${Object.entries(a).map(([c,d])=>`<li>${c}: ${d}</li>`).join("")}
                </ul>
                <form>
                    <h2>Tax Rate</h2>
                    <input type="range" name="tax_rate">
                </form>
                `,T.classList.remove("content-hidden"),i()):T.classList.add("content-hidden")}function i(){T.replaceChildren(...Object.entries(e[o].resources).map(([c,d])=>Object.assign(document.createElement("div"),{textContent:`${c}: ${d}`})))}return{board:new Map,get round(){return t},set round(c){t=c},get active_player(){return e[o]},get players(){return e},set players(c){e.push(...c)},get current_player_id(){return o},set current_player_id(c){o=c},get current_player_total_production(){return a},clear_players(){e.forEach(c=>c.destroy()),e.length=0},get current_phase(){return r},set current_phase(c){r=c},update_resource_display:i,next_turn(){o===e.length-1?(o=0,r=(()=>{switch(r){case E.development.name:return E.movement_planning.name;case E.movement_planning.name:return E.movement_execution.name;default:return t+=1,E.development.name}})()):o+=1,s()},run:s}})();function Je(e,t){const r=JSON.parse(t);Object.assign(e,{round:r.round,current_phase:r.current_phase,current_player_id:r.current_player_id,players:r.players.map(({name:o,type:a,color:s})=>se(o,a,s)),board:Ne(r.board,e.board)}),e.players.forEach((o,a)=>{o.cells=[...e.board.values()].filter(s=>s.owner_id===a)})}window.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("wargame-savegame"),t=e!==null;S.dataset.priorSave=t,S.showModal(),H.request(),t?Je(_,e):_.board=Ae(y,_.board)},{once:!0});window.addEventListener("beforeunload",()=>{if(H.release(),_.players.length===0){localStorage.removeItem("wargame-savegame");return}localStorage.setItem("wargame-savegame",JSON.stringify({round:_.round,current_phase:_.current_phase,current_player_id:_.current_player_id,players:_.players.map(({name:e,type:t,color:r})=>({name:e,type:t,color:r})),board:[..._.board.values()].map(({cx:e,cy:t,x:r,y:o,q:a,r:s,s:i,biome:{name:c},elevation:d,humidity:l,temperature:p,owner_id:w})=>({cx:e,cy:t,x:r,y:o,q:a,r:s,s:i,biome_name:c,elevation:d,humidity:l,temperature:p,owner_id:w}))}))});document.addEventListener("submit",e=>e.preventDefault());qe.addEventListener("submit",e=>{if(e.submitter.id==="new-game-btn")S.dataset.priorSave==="true"&&(Object.assign(_,{round:0,current_phase:E.land_grab.name,current_player_id:0}),_.board=te(_.board),_.clear_players()),Array.from({length:2},(t,r)=>ae(r+1)),S.classList.add("game-config");else{if(S.dataset.priorSave==="false")return;_.run(),S.close()}});Oe.addEventListener("click",()=>{_.board=te(_.board)});G.addEventListener("click",Fe(_));D.addEventListener("submit",()=>{const e=new Set,t=[...D.querySelectorAll(".player-name-input")];if(t.reduce((o,{value:a})=>(o[a]=a in o?o[a]+1:1,o[a]>1&&e.add(a),o),{}),e.size!==0){t.forEach(o=>{e.has(o.value)&&o.classList.add("invalid")});return}const r=["tomato","rebeccapurple","gold","aquamarine","hotpink"];_.players=Array.from(q,(o,a)=>{const s=o.querySelector(".player-name-input").value,i=o.querySelector(".player-type-select-radio:checked").value;return se(s,i,r[a])}),_.run(),S.close()});ve.addEventListener("click",()=>{q.length!==5&&ae(q.length+1)});X.addEventListener("click",({target:e})=>{e.closest(".delete-player-btn")&&q.length!==2&&(e.closest(".player-config").remove(),[...q].forEach((t,r)=>{r=r+1,Object.assign(t.querySelector(".player-name-input"),{name:`player-${r}-name`,value:`Player ${r}`}),t.querySelectorAll(".player-type-select-radio").forEach(o=>{o.name=`player-${r}-type`})}))});S.addEventListener("cancel",e=>e.preventDefault());function We(e){Ee.textContent=JSON.stringify(e,(t,r)=>t==="neighbors"?void 0:r,4)}A.addEventListener("click",({target:e})=>{const t=e.closest(".cell-wrapper");if(!t)return;const r=A.querySelector(".clicked"),o=_.board.get(t);r&&(r.classList.remove("clicked"),Z.replaceChildren(),r===t)||(We(o),E[_.current_phase].handler_function(o,t,_))});ke.addEventListener("input",xe(_));$e.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});
