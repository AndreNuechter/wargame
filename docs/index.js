(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&a(c)}).observe(document,{childList:!0,subtree:!0});function r(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(n){if(n.ep)return;n.ep=!0;const o=r(n);fetch(n.href,o)}})();const J=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(J).catch(console.error);let k;async function F(){var e,t;k=await((t=(e=navigator.wakeLock)==null?void 0:e.request)==null?void 0:t.call(e,"screen"))}async function G(){k&&(await k.release(),k=void 0)}const B={request:F,release:G},_={width:30,height:24};function x(e){return e%2===0}function K(e,t,r){return e>=t&&e<=r}function V(e,t=0,r=e.length){return e[$(r,t)]}function $(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function O(e){e.forEach(t=>{t.neighbors=Q(t,e,_)})}function Q({q:e,r:t,s:r,x:a,y:n},o,c){const p=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(s=>o.find(m=>m.q===e+s.q&&m.r===t+s.r&&m.s===r+s.s)).filter(Boolean);return a===0&&(p.push(o.find(s=>n===s.y&&s.x===c.width-1)),x(n)&&p.push(...[n<c.height-1?o.find(s=>n+1===s.y&&s.x===c.width-1):null,n>0?o.find(s=>n-1===s.y&&s.x===c.width-1):null].filter(Boolean))),a===c.width-1&&(p.push(o.find(s=>n===s.y&&s.x===0)),x(n)||p.push(...[n<c.height-1?o.find(s=>n+1===s.y&&s.x===0):null,n>0?o.find(s=>n-1===s.y&&s.x===0):null].filter(Boolean))),p}const f={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function A(e){e.forEach(t=>{const r=Math.random(),a=-1,n=K(r,.3,.7)?0:1*(-1*+(r<.3)),o=(c=>c<0?0:c>_.height-1?_.height-1:c)(t.y+n+a);t.temperature=X(o)})}function X(e){switch(e){case 0:case 1:case _.height-2:case _.height-1:return f.freezing;case 2:case 3:case _.height-4:case _.height-3:return f.cold;case 4:case 5:case _.height-6:case _.height-5:return f.temperate;case 6:case 7:case 8:case _.height-9:case _.height-8:case _.height-7:return f.warm;default:return f.hot}}function Z(e){switch(e){case f.hot:return f.warm;case f.warm:return f.temperate;case f.temperate:return f.cold;default:return f.freezing}}function ee(e){switch(e){case f.freezing:return f.cold;case f.cold:return f.temperate;case f.temperate:return f.warm;default:return f.hot}}const N=new Set([0,1,2,_.height-1,_.height-2,_.height-3]);function z(e){const a=e.length/2.5;let n=0;for(;n<a;){const o=$(13,4),c={x:$(_.width),y:$(_.height-3,3)},d=e.find(({x:m,y:g})=>m===c.x&&g===c.y),p=new Set(d.neighbors.filter(({y:m})=>!N.has(m))),s=new Set;n+=o,q(d),s.add(d);for(let m=0;m<o;m+=1){const g=V([...p]);q(g),s.add(g),p.delete(g),g.neighbors.filter(y=>!s.has(y)).filter(({y})=>!N.has(y)).forEach(y=>p.add(y))}}e.filter(o=>o.elevation>0).forEach(o=>{const c=o.neighbors.filter(p=>p.elevation>0).length;if(c>=3)return;const d=Math.random();(c===2&&d>.7||c===1&&d<.7)&&te(o)})}function q(e){e.elevation+=1,e.elevation>1&&(e.temperature=Z(e.temperature))}function te(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=ee(e.temperature))}const l={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function re(e){switch(e){case l.arid:return l.dry;case l.dry:return l.moderate;case l.moderate:return l.moist;default:return l.wet}}function C(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:r})=>r===i.sea.name).forEach(()=>{t.humidity=re(t.humidity)})})}const i={sea:new h("sea"),mountain:new h("mountain"),high_mountain:new h("high_mountain"),ice:new h("ice"),tundra:new h("tundra"),grassland:new h("grassland"),savanna:new h("savanna"),boreal_forest:new h("boreal_forest"),forest:new h("forest"),tropical_rainforest:new h("tropical_rainforest"),cold_swamp:new h("cold_swamp"),swamp:new h("swamp"),tropical_swamp:new h("tropical_swamp"),desert:new h("desert"),extreme_desert:new h("extreme_desert")},ne={[f.freezing]:{[l.arid]:i.tundra.name,[l.dry]:i.tundra.name,[l.moderate]:i.tundra.name,[l.moist]:i.boreal_forest.name,[l.wet]:i.boreal_forest.name},[f.cold]:{[l.arid]:i.tundra.name,[l.dry]:i.tundra.name,[l.moderate]:i.boreal_forest.name,[l.moist]:i.boreal_forest.name,[l.wet]:i.boreal_forest.name},[f.temperate]:{[l.arid]:i.tundra.name,[l.dry]:i.forest.name,[l.moderate]:i.forest.name,[l.moist]:i.forest.name,[l.wet]:i.swamp.name},[f.warm]:{[l.arid]:i.desert.name,[l.dry]:i.grassland.name,[l.moderate]:i.savanna.name,[l.moist]:i.forest.name,[l.wet]:i.tropical_swamp.name},[f.hot]:{[l.arid]:i.extreme_desert.name,[l.dry]:i.desert.name,[l.moderate]:i.grassland.name,[l.moist]:i.savanna.name,[l.wet]:i.tropical_rainforest.name}};function h(e){return{name:e}}function M(e){e.forEach(t=>{t.biome=oe(t)})}function j(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=ae(t)})}function ae(e,t=_.height){const r=Math.random();return[0,t-1].includes(e.y)?r<=.1?i.sea.name:i.ice.name:[1,t-2].includes(e.y)?r<=.75?i.sea.name:i.ice.name:[2,t-3].includes(e.y)?r<=.9?i.sea.name:i.ice.name:i.sea.name}function oe(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?i.high_mountain.name:i.mountain.name:ne[e.temperature][e.humidity]}const P=document.createElement("style");P.textContent=Object.values(i).map(e=>`[data-biome="${e.name}"] {
        .outer-cell:not(.owned),
        .inner-cell {
            fill: var(--${e.name});
        }
    }`).join(`
`);document.body.append(P);const E=document.getElementById("board"),se=document.getElementById("cell-info"),ie=document.getElementById("toogle-coord-system-btn"),b=document.getElementById("start-game-overlay"),ce=document.getElementById("start-game-form"),I=document.getElementById("config-game-form"),le=document.getElementById("reroll-map-btn"),D=document.getElementById("player-setup"),de=document.getElementById("add-player-btn");document.getElementById("round-info");const L=document.getElementsByClassName("player-config"),ue=(()=>{const e=document.createElementNS("http://www.w3.org/2000/svg","use"),t=document.createElementNS("http://www.w3.org/2000/svg","use"),r=document.createElementNS("http://www.w3.org/2000/svg","g");return t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#inner-hex"),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#outer-hex"),t.classList.add("inner-cell"),e.classList.add("outer-cell"),r.classList.add("cell"),r.append(e,t),r})(),me=document.getElementById("player-config-tmpl").content;function R(e,t,r,a,n,o,c){const d=fe(e,t,r,a,n,o,c);let p="",s=-1;return{cx:e,cy:t,x:r,y:a,q:n,r:o,s:c,neighbors:[],cell:d,elevation:0,humidity:l.arid,temperature:f.freezing,get biome(){return p},set biome(m){p=m,d.dataset.biome=m},get owner_id(){return s},set owner_id(m){if(s=m,m===-1){d.firstChild.classList.remove("owned");return}d.dataset.owner_id=m,d.firstChild.classList.add("owned")}}}function fe(e,t,r,a,n,o,c){const d=ue.cloneNode(!0);d.setAttribute("transform",`translate(${e}, ${t})`);const p=document.createElementNS("http://www.w3.org/2000/svg","g"),s=document.createElementNS("http://www.w3.org/2000/svg","text"),m=document.createElementNS("http://www.w3.org/2000/svg","text"),g=document.createElementNS("http://www.w3.org/2000/svg","text"),y=document.createElementNS("http://www.w3.org/2000/svg","text");return s.textContent=`${n}`,m.textContent=`${o}`,g.textContent=`${c}`,y.textContent=`${r}, ${a}`,s.setAttribute("transform",`translate(${1.5}, 2)`),m.setAttribute("transform",`translate(${4.5}, ${3.5})`),g.setAttribute("transform","translate(2, 5)"),y.setAttribute("transform",`translate(${1.5}, ${3.5})`),p.classList.add("cell-coord"),s.classList.add("cube-coord"),m.classList.add("cube-coord"),g.classList.add("cube-coord"),y.classList.add("offset-coord"),p.append(s,m,g,y),d.append(p),E.append(d),d}function T(e){const t=[...e.values()];return t.forEach(r=>Object.assign(r,{biome:"",elevation:0,humidity:l.arid,temperature:f.freezing,owner_id:-1})),A(t),z(t),j(t),C(t),M(t),e}function pe(e,t){const r=e.map(({cx:a,cy:n,x:o,y:c,q:d,r:p,s,biome:m,elevation:g,humidity:y,temperature:W,owner_id:Y})=>Object.assign(R(a,n,o,c,d,p,s),{biome:m,elevation:g,humidity:y,temperature:W,owner_id:Y}));return O(r),r.reduce((a,n)=>(a.set(n.cell,n),a),t)}function _e(e,t){const r=ge(e);return O(r),A(r),z(r),j(r),C(r),M(r),r.reduce((a,n)=>(a.set(n.cell,n),a),t)}function ge({height:e,width:t}){const r=[];for(let a=0;a<e;a+=1){const n=+!x(a);for(let o=0;o<t;o+=1){const c=o-(a-(a&1))/2;r.push(R(o*6+n*3,a*4.5,o,a,c,a,-c-a))}}return r}const w={land_grab:S("land_grab","Pick your origin","Confirm choice"),development:S("development"),movement_planning:S("movement_planning"),movement_execution:S("movement_execution")};function S(e,t=e,r="End turn"){return{name:e,call_to_action:t,end_turn_btn_label:r}}const he={human:"human",ai:"ai"},we={[w.land_grab.name]:()=>{},[w.development.name]:()=>{},[w.movement_planning.name]:()=>{},[w.movement_execution.name]:()=>{}};function U(e){const t=me.cloneNode(!0);Object.assign(t.querySelector(".player-name-input"),{name:`player-${e}-name`,value:`Player ${e}`}),t.querySelectorAll(".player-type-select-radio").forEach(r=>{r.name=`player-${e}-type`}),D.append(t)}function H(e,t=he.ai,r=""){let a=e;return{get name(){return a},set name(n){n!==""&&(a=n)},take_turn(n){we[n]()},color:r,type:t,cells:[]}}const u=(()=>{const e=[];let t=0,r=w.land_grab.name,a=0;function n(){o(),c()}function o(){document.getElementById("phase-label").textContent=w[r].call_to_action,document.getElementById("player-name").textContent=e[a].name}function c(){e[a].take_turn(r)}return{board:new Map,get round(){return t},set round(d){t=d},get players(){return e},set players(d){e.push(...d)},get current_player_id(){return a},set current_player_id(d){d>-1&&d<e.length&&(a=d)},clear_players(){e.length=0},get current_phase(){return r},set current_phase(d){d in w&&(r=d)},next_turn(){a===e.length-1?(t+=1,a=0,r=(()=>{switch(r){case w.development.name:return w.movement_planning.name;case w.movement_planning.name:return w.movement_execution.name;default:return w.development.name}})()):a+=1,n()},run:n}})();function ye(e,t){const r=JSON.parse(t);Object.assign(e,{round:r.round,current_phase:r.current_phase,current_player_id:r.current_player_id,players:r.players.map(({name:a,type:n,color:o})=>H(a,n,o)),board:pe(r.board,e.board)}),e.players.forEach((a,n)=>{a.cells=[...e.board.values()].filter(o=>o.owner_id===n).map(({cell:o})=>o)})}let v=null;window.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("wargame-savegame"),t=e!==null;b.dataset.priorSave=t,b.showModal(),B.request(),t?ye(u,e):u.board=_e(_,u.board)},{once:!0});window.addEventListener("beforeunload",()=>{if(B.release(),u.players.length===0){localStorage.removeItem("wargame-savegame");return}localStorage.setItem("wargame-savegame",JSON.stringify({round:u.round,current_phase:u.current_phase,current_player_id:u.current_player_id,players:u.players.map(({name:e,type:t,color:r})=>({name:e,type:t,color:r})),board:[...u.board.values()].map(({cx:e,cy:t,x:r,y:a,q:n,r:o,s:c,biome:d,elevation:p,humidity:s,temperature:m,owner_id:g})=>({cx:e,cy:t,x:r,y:a,q:n,r:o,s:c,biome:d,elevation:p,humidity:s,temperature:m,owner_id:g}))}))});ce.addEventListener("submit",e=>{e.preventDefault(),e.submitter.id==="new-game-btn"?(b.dataset.priorSave==="true"&&(Object.assign(u,{round:0,current_phase:w.land_grab.name,current_player_id:0}),u.board=T(u.board),u.clear_players()),Array.from({length:2},(t,r)=>U(r+1)),b.classList.add("game-config")):(u.run(),b.close())});le.addEventListener("click",()=>{u.board=T(u.board)});document.getElementById("end-turn-btn").addEventListener("click",()=>{if(u.current_phase===w.land_grab.name){if(v===null)return;u.board.get(v).owner_id=u.current_player_id,u.players[u.current_player_id].cells.push(v),v=null}u.next_turn()});I.addEventListener("submit",e=>{e.preventDefault();const t=new Set,r=[...I.querySelectorAll(".player-name-input")];if(r.reduce((a,{value:n})=>(a[n]=n in a?a[n]+1:1,a[n]>1&&t.add(n),a),{}),t.size!==0){r.forEach(a=>{t.has(a.value)&&a.classList.add("invalid")});return}u.players=Array.from(L,a=>{const n=a.querySelector(".player-name-input").value,o=a.querySelector(".player-type-select-radio:checked").value;return H(n,o)}),u.run(),b.close()});de.addEventListener("click",()=>{L.length!==5&&U(L.length+1)});D.addEventListener("click",({target:e})=>{e.closest(".delete-player-btn")&&L.length!==2&&(e.closest(".player-config").remove(),[...L].forEach((t,r)=>{r=r+1,Object.assign(t.querySelector(".player-name-input"),{name:`player-${r}-name`,value:`Player ${r}`}),t.querySelectorAll(".player-type-select-radio").forEach(a=>{a.name=`player-${r}-type`})}))});b.addEventListener("cancel",e=>e.preventDefault());ie.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});E.addEventListener("click",({target:e})=>{const t=e.closest(".cell");if(!t)return;const r=E.querySelector(".clicked"),a=u.board.get(t);if(!(r&&(r.classList.remove("clicked"),E.querySelectorAll(".adjacent-to-clicked").forEach(n=>n.classList.remove("adjacent-to-clicked")),v=null,r===t))){if(u.current_phase===w.land_grab.name){if(a.owner_id!==-1||a.biome===i.sea.name)return;v=t}t.classList.add("clicked"),a.neighbors.forEach(({cell:n})=>n.classList.add("adjacent-to-clicked"))}});E.addEventListener("pointerover",({target:e})=>{const t=e.closest(".cell");if(!t)return;const r=u.board.get(t);se.textContent=`
        biome: ${r.biome},
        temperature: ${r.temperature},
        humidity: ${r.humidity},
        elevation: ${r.elevation}
    `});
