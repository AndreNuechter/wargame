(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&a(l)}).observe(document,{childList:!0,subtree:!0});function r(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(n){if(n.ep)return;n.ep=!0;const o=r(n);fetch(n.href,o)}})();const C=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(C).catch(console.error);const p={width:30,height:24};function L(e){return e%2===0}function D(e,t,r){return e>=t&&e<=r}function R(e,t=0,r=e.length){return e[E(r,t)]}function E(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function k(e){e.forEach(t=>{t.neighbors=T(t,e,p)})}function T({q:e,r:t,s:r,x:a,y:n},o,l){const m=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(s=>o.find(f=>f.q===e+s.q&&f.r===t+s.r&&f.s===r+s.s)).filter(Boolean);return a===0&&(m.push(o.find(s=>n===s.y&&s.x===l.width-1)),L(n)&&m.push(...[n<l.height-1?o.find(s=>n+1===s.y&&s.x===l.width-1):null,n>0?o.find(s=>n-1===s.y&&s.x===l.width-1):null].filter(Boolean))),a===l.width-1&&(m.push(o.find(s=>n===s.y&&s.x===0)),L(n)||m.push(...[n<l.height-1?o.find(s=>n+1===s.y&&s.x===0):null,n>0?o.find(s=>n-1===s.y&&s.x===0):null].filter(Boolean))),m}const d={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function I(e){e.forEach(t=>{const r=Math.random(),a=-1,n=D(r,.3,.7)?0:1*(-1*+(r<.3)),o=(l=>l<0?0:l>p.height-1?p.height-1:l)(t.y+n+a);t.temperature=U(o)})}function U(e){switch(e){case 0:case 1:case p.height-2:case p.height-1:return d.freezing;case 2:case 3:case p.height-4:case p.height-3:return d.cold;case 4:case 5:case p.height-6:case p.height-5:return d.temperate;case 6:case 7:case 8:case p.height-9:case p.height-8:case p.height-7:return d.warm;default:return d.hot}}function H(e){switch(e){case d.hot:return d.warm;case d.warm:return d.temperate;case d.temperate:return d.cold;default:return d.freezing}}function W(e){switch(e){case d.freezing:return d.cold;case d.cold:return d.temperate;case d.temperate:return d.warm;default:return d.hot}}const $=new Set([0,1,2,p.height-1,p.height-2,p.height-3]);function x(e){const a=e.length/2.5;let n=0;for(;n<a;){const o=E(13,4),l={x:E(p.width),y:E(p.height-3,3)},u=e.find(({x:f,y:_})=>f===l.x&&_===l.y),m=new Set(u.neighbors.filter(({y:f})=>!$.has(f))),s=new Set;n+=o,N(u),s.add(u);for(let f=0;f<o;f+=1){const _=R([...m]);N(_),s.add(_),m.delete(_),_.neighbors.filter(w=>!s.has(w)).filter(({y:w})=>!$.has(w)).forEach(w=>m.add(w))}}e.filter(o=>o.elevation>0).forEach(o=>{const l=o.neighbors.filter(m=>m.elevation>0).length;if(l>=3)return;const u=Math.random();(l===2&&u>.7||l===1&&u<.7)&&Y(o)})}function N(e){e.elevation+=1,e.elevation>1&&(e.temperature=H(e.temperature))}function Y(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=W(e.temperature))}const c={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function J(e){switch(e){case c.arid:return c.dry;case c.dry:return c.moderate;case c.moderate:return c.moist;default:return c.wet}}function q(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:r})=>r===i.sea.name).forEach(()=>{t.humidity=J(t.humidity)})})}const i={sea:new g("sea"),mountain:new g("mountain"),high_mountain:new g("high_mountain"),ice:new g("ice"),tundra:new g("tundra"),grassland:new g("grassland"),savanna:new g("savanna"),boreal_forest:new g("boreal_forest"),forest:new g("forest"),tropical_rainforest:new g("tropical_rainforest"),cold_swamp:new g("cold_swamp"),swamp:new g("swamp"),tropical_swamp:new g("tropical_swamp"),desert:new g("desert"),extreme_desert:new g("extreme_desert")},F={[d.freezing]:{[c.arid]:i.tundra.name,[c.dry]:i.tundra.name,[c.moderate]:i.tundra.name,[c.moist]:i.boreal_forest.name,[c.wet]:i.boreal_forest.name},[d.cold]:{[c.arid]:i.tundra.name,[c.dry]:i.tundra.name,[c.moderate]:i.boreal_forest.name,[c.moist]:i.boreal_forest.name,[c.wet]:i.boreal_forest.name},[d.temperate]:{[c.arid]:i.tundra.name,[c.dry]:i.forest.name,[c.moderate]:i.forest.name,[c.moist]:i.forest.name,[c.wet]:i.swamp.name},[d.warm]:{[c.arid]:i.desert.name,[c.dry]:i.grassland.name,[c.moderate]:i.savanna.name,[c.moist]:i.forest.name,[c.wet]:i.tropical_swamp.name},[d.hot]:{[c.arid]:i.extreme_desert.name,[c.dry]:i.desert.name,[c.moderate]:i.grassland.name,[c.moist]:i.savanna.name,[c.wet]:i.tropical_rainforest.name}};function g(e){return{name:e}}function A(e){e.forEach(t=>{t.biome=K(t)})}function O(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=G(t)})}function G(e,t=p.height){const r=Math.random();return[0,t-1].includes(e.y)?r<=.1?i.sea.name:i.ice.name:[1,t-2].includes(e.y)?r<=.75?i.sea.name:i.ice.name:[2,t-3].includes(e.y)?r<=.9?i.sea.name:i.ice.name:i.sea.name}function K(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?i.high_mountain.name:i.mountain.name:F[e.temperature][e.humidity]}const B=document.createElement("style");B.textContent=Object.values(i).map(e=>`[data-biome="${e.name}"] {
        .outer-cell:not(.owned),
        .inner-cell {
            fill: var(--${e.name});
        }
    }`).join(`
`);document.body.append(B);const b=document.getElementById("board"),v=document.getElementById("info-popover"),V=document.getElementById("toogle-coord-system-btn"),y=document.getElementById("start-game-overlay"),Q=document.getElementById("start-game-form"),X=document.getElementById("config-game-form"),Z=document.getElementById("reroll-map-btn"),S=document.getElementById("player-setup"),ee=document.getElementById("add-player-btn"),te=(()=>{const e=document.createElementNS("http://www.w3.org/2000/svg","use"),t=document.createElementNS("http://www.w3.org/2000/svg","use"),r=document.createElementNS("http://www.w3.org/2000/svg","g");return t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#inner-hex"),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#outer-hex"),t.classList.add("inner-cell"),e.classList.add("outer-cell"),r.classList.add("cell"),r.append(e,t),r})(),re=document.getElementById("player-config-tmpl").content;function M(e,t,r,a,n,o,l){const u=ne(e,t,r,a,n,o,l);let m="";return{cx:e,cy:t,x:r,y:a,q:n,r:o,s:l,neighbors:[],cell:u,elevation:0,humidity:c.arid,temperature:d.freezing,get biome(){return m},set biome(s){m=s,u.dataset.biome=s}}}function ne(e,t,r,a,n,o,l){const u=te.cloneNode(!0);u.setAttribute("transform",`translate(${e}, ${t})`);const m=document.createElementNS("http://www.w3.org/2000/svg","g"),s=document.createElementNS("http://www.w3.org/2000/svg","text"),f=document.createElementNS("http://www.w3.org/2000/svg","text"),_=document.createElementNS("http://www.w3.org/2000/svg","text"),w=document.createElementNS("http://www.w3.org/2000/svg","text");return s.textContent=`${n}`,f.textContent=`${o}`,_.textContent=`${l}`,w.textContent=`${r}, ${a}`,s.setAttribute("transform",`translate(${1.5}, 2)`),f.setAttribute("transform",`translate(${4.5}, ${3.5})`),_.setAttribute("transform","translate(2, 5)"),w.setAttribute("transform",`translate(${1.5}, ${3.5})`),m.classList.add("cell-coord"),s.classList.add("cube-coord"),f.classList.add("cube-coord"),_.classList.add("cube-coord"),w.classList.add("offset-coord"),m.append(s,f,_,w),u.append(m),b.append(u),u}function z(e){const t=[...e.values()];return t.forEach(r=>Object.assign(r,{biome:"",elevation:0,humidity:c.arid,temperature:d.freezing})),I(t),x(t),O(t),q(t),A(t),e}function ae(e){const t=JSON.parse(e).map(({cx:r,cy:a,x:n,y:o,q:l,r:u,s:m,biome:s,elevation:f,humidity:_,temperature:w})=>Object.assign(M(r,a,n,o,l,u,m),{biome:s,elevation:f,humidity:_,temperature:w}));return k(t),t.reduce((r,a)=>(r.set(a.cell,a),r),new Map)}function oe(e){const t=se(e);return k(t),I(t),x(t),O(t),q(t),A(t),t.reduce((r,a)=>(r.set(a.cell,a),r),new Map)}function se({height:e,width:t}){const r=[];for(let a=0;a<e;a+=1){const n=+!L(a);for(let o=0;o<t;o+=1){const l=o-(a-(a&1))/2;r.push(M(o*6+n*3,a*4.5,o,a,l,a,-l-a))}}return r}const P={human:"human",ai:"ai"};function ie(e,t){const r=re.cloneNode(!0);return r.children[0].dataset.playerId=e,Object.assign(r.querySelector(".player-name-input"),{name:`player-${e}-name`,value:t}),r.querySelectorAll(".player-type-select").forEach(a=>{a.value===P.ai&&(a.checked=!0),a.name=`player-${e}-type`}),r}function j(e,t){let r=t||`Player ${e}`;return S.append(ie(e,r)),{get name(){return r},set name(a){a!==""&&(r=a)},color:"",type:P.ai,cells:[]}}const ce={land_grab:"land_grab",development:"development",movement_planning:"movement_planning"},h={players:[],round:0,phase:ce.landgrab};window.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("wargame-board-state"),t=e!==null;y.dataset.priorSave=t,y.showModal(),h.board=t?ae(e):oe(p)},{once:!0});window.addEventListener("beforeunload",()=>{localStorage.setItem("wargame-board-state",JSON.stringify([...h.board.values()].map(({cx:e,cy:t,x:r,y:a,q:n,r:o,s:l,biome:u,elevation:m,humidity:s,temperature:f})=>({cx:e,cy:t,x:r,y:a,q:n,r:o,s:l,biome:u,elevation:m,humidity:s,temperature:f}))))});Q.addEventListener("submit",e=>{e.preventDefault(),e.submitter.id==="new-game-btn"?(y.dataset.priorSave==="true"&&(h.board=z(h.board)),y.classList.add("game-config"),h.players=Array.from({length:2},(t,r)=>{j(r+1)})):y.close()});Z.addEventListener("click",()=>{h.board=z(h.board)});X.addEventListener("submit",e=>{e.preventDefault(),y.close()});ee.addEventListener("click",()=>{h.players.length!==5&&h.players.push(j(h.players.length+1))});S.addEventListener("click",({target:e})=>{if(!e.closest(".delete-player-btn")||h.players.length===2)return;const t=e.closest(".player-config"),r=Number(t.dataset.playerId)-1;h.players.splice(r,1),t.remove(),S.querySelectorAll(".player-config").forEach((a,n)=>{n=n+1,a.dataset.playerId=n,Object.assign(a.querySelector(".player-name-input"),{name:`player-${n}-name`,value:`Player ${n}`}),a.querySelectorAll(".player-type-select").forEach(o=>{o.name=`player-${n}-type`})})});y.addEventListener("cancel",e=>e.preventDefault());V.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});b.addEventListener("click",({target:e})=>{const t=e.closest(".cell");if(!t)return;const r=b.querySelector(".clicked"),a=h.board.get(t);r&&(r.classList.remove("clicked"),b.querySelectorAll(".adjacent-to-clicked").forEach(n=>n.classList.remove("adjacent-to-clicked")),r===t)||(t.classList.add("clicked"),a.neighbors.forEach(({cell:n})=>n.classList.add("adjacent-to-clicked")))});b.addEventListener("pointerover",({target:e,x:t,y:r})=>{const a=e.closest(".cell");if(!a)return;const n=h.board.get(a);v.textContent=`
        biome: ${n.biome},
        temperature: ${n.temperature},
        humidity: ${n.humidity},
        elevation: ${n.elevation}
    `,v.classList.add("visible"),v.style.top=`${r}px`,v.style.left=`${t}px`});
