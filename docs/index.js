(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))c(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const d of n.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&c(d)}).observe(document,{childList:!0,subtree:!0});function o(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function c(r){if(r.ep)return;r.ep=!0;const n=o(r);fetch(r.href,n)}})();const S=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(S).catch(console.error);const m={width:30,height:24};function y(e){return e%2===0}function x(e,t,o){return e>=t&&e<=o}function N(e,t=0,o=e.length){return e[b(o,t)]}function b(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function k(e){e.forEach(t=>{t.neighbors=q(t,e,m)})}function q({q:e,r:t,s:o,x:c,y:r},n,d){const u=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(s=>n.find(h=>h.q===e+s.q&&h.r===t+s.r&&h.s===o+s.s)).filter(Boolean);return c===0&&(u.push(n.find(s=>r===s.y&&s.x===d.width-1)),y(r)&&u.push(...[r<d.height-1?n.find(s=>r+1===s.y&&s.x===d.width-1):null,r>0?n.find(s=>r-1===s.y&&s.x===d.width-1):null].filter(Boolean))),c===d.width-1&&(u.push(n.find(s=>r===s.y&&s.x===0)),y(r)||u.push(...[r<d.height-1?n.find(s=>r+1===s.y&&s.x===0):null,r>0?n.find(s=>r-1===s.y&&s.x===0):null].filter(Boolean))),u}const l={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function z(e){e.forEach(t=>{const o=Math.random(),c=t.y<m.height/2?-1:1,r=x(o,.3,.7)?0:1*(-1*+(o<.3)),n=(d=>d<0?0:d>m.height-1?m.height-1:d)(t.y+r+c);t.temperature=M(n)})}function M(e){switch(e){case 0:case 1:case m.height-2:case m.height-1:return l.freezing;case 2:case 3:case m.height-4:case m.height-3:return l.cold;case 4:case 5:case m.height-6:case m.height-5:return l.temperate;case 6:case 7:case 8:case m.height-9:case m.height-8:case m.height-7:return l.warm;default:return l.hot}}function A(e){switch(e){case l.hot:return l.warm;case l.warm:return l.temperate;case l.temperate:return l.cold;default:return l.freezing}}function B(e){switch(e){case l.freezing:return l.cold;case l.cold:return l.temperate;case l.temperate:return l.warm;default:return l.hot}}const E=new Set([0,1,2,m.height-1,m.height-2,m.height-3]);function O(e){const c=e.length/2.5;let r=0;for(;r<c;){const n=b(13,4),d={x:b(m.width),y:b(m.height-3,3)},f=e.find(({x:h,y:p})=>h===d.x&&p===d.y),u=new Set(f.neighbors.filter(({y:h})=>!E.has(h))),s=new Set;r+=n,L(f),s.add(f);for(let h=0;h<n;h+=1){const p=N([...u]);L(p),s.add(p),u.delete(p),p.neighbors.filter(g=>!s.has(g)).filter(({y:g})=>!E.has(g)).forEach(g=>u.add(g))}}e.filter(n=>n.elevation>0).forEach(n=>{const d=n.neighbors.filter(u=>u.elevation>0).length;if(d>=3)return;const f=Math.random();(d===2&&f>.7||d===1&&f<.7)&&I(n)})}function L(e){e.elevation+=1,e.elevation>1&&(e.temperature=A(e.temperature))}function I(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=B(e.temperature))}const i={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function C(e){switch(e){case i.arid:return i.dry;case i.dry:return i.moderate;case i.moderate:return i.moist;default:return i.wet}}function H(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:o})=>o===a.sea.name).forEach(()=>{t.humidity=C(t.humidity)})})}const a={sea:new w("sea"),mountain:new w("mountain"),high_mountain:new w("high_mountain"),ice:new w("ice"),tundra:new w("tundra"),grassland:new w("grassland"),savanna:new w("savanna"),boreal_forest:new w("boreal_forest"),forest:new w("forest"),tropical_rainforest:new w("tropical_rainforest"),cold_swamp:new w("cold_swamp"),swamp:new w("swamp"),tropical_swamp:new w("tropical_swamp"),desert:new w("desert"),extreme_desert:new w("extreme_desert")},P={[l.freezing]:{[i.arid]:a.ice.name,[i.dry]:a.ice.name,[i.moderate]:a.ice.name,[i.moist]:a.ice.name,[i.wet]:a.ice.name},[l.cold]:{[i.arid]:a.tundra.name,[i.dry]:a.tundra.name,[i.moderate]:a.boreal_forest.name,[i.moist]:a.boreal_forest.name,[i.wet]:a.cold_swamp.name},[l.temperate]:{[i.arid]:a.tundra.name,[i.dry]:a.grassland.name,[i.moderate]:a.grassland.name,[i.moist]:a.forest.name,[i.wet]:a.swamp.name},[l.warm]:{[i.arid]:a.extreme_desert.name,[i.dry]:a.desert.name,[i.moderate]:a.savanna.name,[i.moist]:a.forest.name,[i.wet]:a.tropical_swamp.name},[l.hot]:{[i.arid]:a.extreme_desert.name,[i.dry]:a.desert.name,[i.moderate]:a.savanna.name,[i.moist]:a.savanna.name,[i.wet]:a.tropical_rainforest.name}};function w(e){return{name:e}}function R(e){e.forEach(t=>{t.biome=W(t)})}function T(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=U(t)})}function U(e,t=m.height){const o=Math.random();return[0,t-1].includes(e.y)?o<=.1?a.sea.name:a.ice.name:[1,t-2].includes(e.y)?o<=.75?a.sea.name:a.ice.name:[2,t-3].includes(e.y)?o<=.9?a.sea.name:a.ice.name:a.sea.name}function W(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?a.high_mountain.name:a.mountain.name:P[e.temperature][e.humidity]}const j=window.document.styleSheets[0];Object.values(a).forEach(e=>{j.insertRule(`[data-biome="${e.name}"] {
            .outer-cell:not(.owned),
            .inner-cell {
                fill: var(--${e.name});
            }
        }`)});const _=document.getElementById("board"),v=document.getElementById("info-popover"),D=document.getElementById("toogle-coord-system-btn"),F=(()=>{const e=document.createElementNS("http://www.w3.org/2000/svg","use"),t=document.createElementNS("http://www.w3.org/2000/svg","use"),o=document.createElementNS("http://www.w3.org/2000/svg","g");return t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#inner-hex"),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#outer-hex"),t.classList.add("inner-cell"),e.classList.add("outer-cell"),o.classList.add("cell"),o.append(e,t),o})();function G(e,t,o,c,r,n,d){const f=K(e,t,o,c,r,n,d);let u="";return{cx:e,cy:t,x:o,y:c,q:r,r:n,s:d,neighbors:[],cell:f,elevation:0,humidity:i.arid,temperature:l.freezing,get biome(){return u},set biome(s){u=s,f.dataset.biome=s}}}function K(e,t,o,c,r,n,d){const f=F.cloneNode(!0);f.setAttribute("transform",`translate(${e}, ${t})`);const u=document.createElementNS("http://www.w3.org/2000/svg","g"),s=document.createElementNS("http://www.w3.org/2000/svg","text"),h=document.createElementNS("http://www.w3.org/2000/svg","text"),p=document.createElementNS("http://www.w3.org/2000/svg","text"),g=document.createElementNS("http://www.w3.org/2000/svg","text");return s.textContent=`${r}`,h.textContent=`${n}`,p.textContent=`${d}`,g.textContent=`${o}, ${c}`,s.setAttribute("transform",`translate(${1.5}, 2)`),h.setAttribute("transform",`translate(${4.5}, ${3.5})`),p.setAttribute("transform","translate(2, 5)"),g.setAttribute("transform",`translate(${1.5}, ${3.5})`),u.classList.add("cell-coord"),s.classList.add("cube-coord"),h.classList.add("cube-coord"),p.classList.add("cube-coord"),g.classList.add("offset-coord"),u.append(s,h,p,g),f.append(u),_.append(f),f}function V(e){const t=Y(e);return k(t),z(t),O(t),T(t),H(t),R(t),t.reduce((o,c)=>(o.set(c.cell,c),o),new Map)}function Y({height:e,width:t}){const o=[];for(let c=0;c<e;c+=1){const r=+!y(c);for(let n=0;n<t;n+=1){const d=n-(c-(c&1))/2;o.push(new G(n*6+r*3,c*4.5,n,c,d,c,-d-c))}}return o}const $=new V(m);D.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});_.addEventListener("click",({target:e})=>{const t=e.closest(".cell");if(!t)return;const o=_.querySelector(".clicked"),c=$.get(t);o&&(o.classList.remove("clicked"),_.querySelectorAll(".adjacent-to-clicked").forEach(r=>r.classList.remove("adjacent-to-clicked")),o===t)||(t.classList.add("clicked"),c.neighbors.forEach(({cell:r})=>r.classList.add("adjacent-to-clicked")))});_.addEventListener("pointerover",({target:e,x:t,y:o})=>{const c=e.closest(".cell");if(!c)return;const r=$.get(c);v.textContent=`
        biome: ${r.biome},
        temperature: ${r.temperature},
        humidity: ${r.humidity},
        elevation: ${r.elevation}
    `,v.classList.add("visible"),v.style.top=`${o}px`,v.style.left=`${t}px`});
