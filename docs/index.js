(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&a(l)}).observe(document,{childList:!0,subtree:!0});function r(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(n){if(n.ep)return;n.ep=!0;const o=r(n);fetch(n.href,o)}})();const U=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(U).catch(console.error);let L;async function H(){var e,t;L=await((t=(e=navigator.wakeLock)==null?void 0:e.request)==null?void 0:t.call(e,"screen"))}async function W(){L&&(await L.release(),L=void 0)}const q={request:H,release:W},p={width:30,height:24};function k(e){return e%2===0}function Y(e,t,r){return e>=t&&e<=r}function J(e,t=0,r=e.length){return e[S(r,t)]}function S(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function N(e){e.forEach(t=>{t.neighbors=F(t,e,p)})}function F({q:e,r:t,s:r,x:a,y:n},o,l){const m=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(s=>o.find(f=>f.q===e+s.q&&f.r===t+s.r&&f.s===r+s.s)).filter(Boolean);return a===0&&(m.push(o.find(s=>n===s.y&&s.x===l.width-1)),k(n)&&m.push(...[n<l.height-1?o.find(s=>n+1===s.y&&s.x===l.width-1):null,n>0?o.find(s=>n-1===s.y&&s.x===l.width-1):null].filter(Boolean))),a===l.width-1&&(m.push(o.find(s=>n===s.y&&s.x===0)),k(n)||m.push(...[n<l.height-1?o.find(s=>n+1===s.y&&s.x===0):null,n>0?o.find(s=>n-1===s.y&&s.x===0):null].filter(Boolean))),m}const d={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function I(e){e.forEach(t=>{const r=Math.random(),a=-1,n=Y(r,.3,.7)?0:1*(-1*+(r<.3)),o=(l=>l<0?0:l>p.height-1?p.height-1:l)(t.y+n+a);t.temperature=G(o)})}function G(e){switch(e){case 0:case 1:case p.height-2:case p.height-1:return d.freezing;case 2:case 3:case p.height-4:case p.height-3:return d.cold;case 4:case 5:case p.height-6:case p.height-5:return d.temperate;case 6:case 7:case 8:case p.height-9:case p.height-8:case p.height-7:return d.warm;default:return d.hot}}function K(e){switch(e){case d.hot:return d.warm;case d.warm:return d.temperate;case d.temperate:return d.cold;default:return d.freezing}}function V(e){switch(e){case d.freezing:return d.cold;case d.cold:return d.temperate;case d.temperate:return d.warm;default:return d.hot}}const $=new Set([0,1,2,p.height-1,p.height-2,p.height-3]);function B(e){const a=e.length/2.5;let n=0;for(;n<a;){const o=S(13,4),l={x:S(p.width),y:S(p.height-3,3)},u=e.find(({x:f,y:h})=>f===l.x&&h===l.y),m=new Set(u.neighbors.filter(({y:f})=>!$.has(f))),s=new Set;n+=o,x(u),s.add(u);for(let f=0;f<o;f+=1){const h=J([...m]);x(h),s.add(h),m.delete(h),h.neighbors.filter(w=>!s.has(w)).filter(({y:w})=>!$.has(w)).forEach(w=>m.add(w))}}e.filter(o=>o.elevation>0).forEach(o=>{const l=o.neighbors.filter(m=>m.elevation>0).length;if(l>=3)return;const u=Math.random();(l===2&&u>.7||l===1&&u<.7)&&Q(o)})}function x(e){e.elevation+=1,e.elevation>1&&(e.temperature=K(e.temperature))}function Q(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=V(e.temperature))}const i={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function X(e){switch(e){case i.arid:return i.dry;case i.dry:return i.moderate;case i.moderate:return i.moist;default:return i.wet}}function O(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:r})=>r===c.sea.name).forEach(()=>{t.humidity=X(t.humidity)})})}const c={sea:new _("sea"),mountain:new _("mountain"),high_mountain:new _("high_mountain"),ice:new _("ice"),tundra:new _("tundra"),grassland:new _("grassland"),savanna:new _("savanna"),boreal_forest:new _("boreal_forest"),forest:new _("forest"),tropical_rainforest:new _("tropical_rainforest"),cold_swamp:new _("cold_swamp"),swamp:new _("swamp"),tropical_swamp:new _("tropical_swamp"),desert:new _("desert"),extreme_desert:new _("extreme_desert")},Z={[d.freezing]:{[i.arid]:c.tundra.name,[i.dry]:c.tundra.name,[i.moderate]:c.tundra.name,[i.moist]:c.boreal_forest.name,[i.wet]:c.boreal_forest.name},[d.cold]:{[i.arid]:c.tundra.name,[i.dry]:c.tundra.name,[i.moderate]:c.boreal_forest.name,[i.moist]:c.boreal_forest.name,[i.wet]:c.boreal_forest.name},[d.temperate]:{[i.arid]:c.tundra.name,[i.dry]:c.forest.name,[i.moderate]:c.forest.name,[i.moist]:c.forest.name,[i.wet]:c.swamp.name},[d.warm]:{[i.arid]:c.desert.name,[i.dry]:c.grassland.name,[i.moderate]:c.savanna.name,[i.moist]:c.forest.name,[i.wet]:c.tropical_swamp.name},[d.hot]:{[i.arid]:c.extreme_desert.name,[i.dry]:c.desert.name,[i.moderate]:c.grassland.name,[i.moist]:c.savanna.name,[i.wet]:c.tropical_rainforest.name}};function _(e){return{name:e}}function A(e){e.forEach(t=>{t.biome=te(t)})}function M(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=ee(t)})}function ee(e,t=p.height){const r=Math.random();return[0,t-1].includes(e.y)?r<=.1?c.sea.name:c.ice.name:[1,t-2].includes(e.y)?r<=.75?c.sea.name:c.ice.name:[2,t-3].includes(e.y)?r<=.9?c.sea.name:c.ice.name:c.sea.name}function te(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?c.high_mountain.name:c.mountain.name:Z[e.temperature][e.humidity]}const z=document.createElement("style");z.textContent=Object.values(c).map(e=>`[data-biome="${e.name}"] {
        .outer-cell:not(.owned),
        .inner-cell {
            fill: var(--${e.name});
        }
    }`).join(`
`);document.body.append(z);const v=document.getElementById("board"),re=document.getElementById("cell-info"),ne=document.getElementById("toogle-coord-system-btn"),b=document.getElementById("start-game-overlay"),ae=document.getElementById("start-game-form"),oe=document.getElementById("config-game-form"),se=document.getElementById("reroll-map-btn"),j=document.getElementById("player-setup"),ce=document.getElementById("add-player-btn");document.getElementById("round-info");const E=document.getElementsByClassName("player-config"),ie=(()=>{const e=document.createElementNS("http://www.w3.org/2000/svg","use"),t=document.createElementNS("http://www.w3.org/2000/svg","use"),r=document.createElementNS("http://www.w3.org/2000/svg","g");return t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#inner-hex"),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","#outer-hex"),t.classList.add("inner-cell"),e.classList.add("outer-cell"),r.classList.add("cell"),r.append(e,t),r})(),le=document.getElementById("player-config-tmpl").content;function C(e,t,r,a,n,o,l){const u=de(e,t,r,a,n,o,l);let m="";return{cx:e,cy:t,x:r,y:a,q:n,r:o,s:l,neighbors:[],cell:u,elevation:0,humidity:i.arid,temperature:d.freezing,get biome(){return m},set biome(s){m=s,u.dataset.biome=s}}}function de(e,t,r,a,n,o,l){const u=ie.cloneNode(!0);u.setAttribute("transform",`translate(${e}, ${t})`);const m=document.createElementNS("http://www.w3.org/2000/svg","g"),s=document.createElementNS("http://www.w3.org/2000/svg","text"),f=document.createElementNS("http://www.w3.org/2000/svg","text"),h=document.createElementNS("http://www.w3.org/2000/svg","text"),w=document.createElementNS("http://www.w3.org/2000/svg","text");return s.textContent=`${n}`,f.textContent=`${o}`,h.textContent=`${l}`,w.textContent=`${r}, ${a}`,s.setAttribute("transform",`translate(${1.5}, 2)`),f.setAttribute("transform",`translate(${4.5}, ${3.5})`),h.setAttribute("transform","translate(2, 5)"),w.setAttribute("transform",`translate(${1.5}, ${3.5})`),m.classList.add("cell-coord"),s.classList.add("cube-coord"),f.classList.add("cube-coord"),h.classList.add("cube-coord"),w.classList.add("offset-coord"),m.append(s,f,h,w),u.append(m),v.append(u),u}function P(e){const t=[...e.values()];return t.forEach(r=>Object.assign(r,{biome:"",elevation:0,humidity:i.arid,temperature:d.freezing})),I(t),B(t),M(t),O(t),A(t),e}function me(e,t){const r=e.map(({cx:a,cy:n,x:o,y:l,q:u,r:m,s,biome:f,elevation:h,humidity:w,temperature:T})=>Object.assign(C(a,n,o,l,u,m,s),{biome:f,elevation:h,humidity:w,temperature:T}));return N(r),r.reduce((a,n)=>(a.set(n.cell,n),a),t)}function ue(e,t){const r=fe(e);return N(r),I(r),B(r),M(r),O(r),A(r),r.reduce((a,n)=>(a.set(n.cell,n),a),t)}function fe({height:e,width:t}){const r=[];for(let a=0;a<e;a+=1){const n=+!k(a);for(let o=0;o<t;o+=1){const l=o-(a-(a&1))/2;r.push(C(o*6+n*3,a*4.5,o,a,l,a,-l-a))}}return r}const pe={human:"human",ai:"ai"};function D(e){const t=le.cloneNode(!0);Object.assign(t.querySelector(".player-name-input"),{name:`player-${e}-name`,value:`Player ${e}`}),t.querySelectorAll(".player-type-select-radio").forEach(r=>{r.name=`player-${e}-type`}),j.append(t)}function R(e,t=pe.ai,r=""){let a=e;return{get name(){return a},set name(n){n!==""&&(a=n)},color:r,type:t,cells:[]}}const y={land_grab:"land_grab",development:"development",movement_planning:"movement_planning",movement_execution:"movement_execution"},g=(()=>{const e=[];let t=y.land_grab,r=0;return{board:new Map,round:0,get players(){return e},set players(a){e.push(...a)},get current_player_id(){return r},set current_player_id(a){a>-1&&a<e.length&&(r=a)},next_player(){return r=Math.min(r+1,e.length-1),r},clear_players(){e.length=0},get current_phase(){return t},set current_phase(a){a in y&&(t=a)},increment_phase(){switch(t){case y.development:t=y.movement_planning;break;case y.movement_planning:t=y.movement_execution;break;default:y.development}},run(){document.getElementById("round-label").textContent=t,document.getElementById("player-name").textContent=e[r].name}}})();function ge(e,t){const r=JSON.parse(t);Object.assign(e,{round:r.round,current_phase:r.current_phase,current_player_id:r.current_player_id,players:r.players.map(({name:a,type:n,color:o})=>R(a,n,o)),board:me(r.board,e.board)})}window.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("wargame-savegame"),t=e!==null;b.dataset.priorSave=t,b.showModal(),q.request(),t?ge(g,e):g.board=ue(p,g.board)},{once:!0});window.addEventListener("beforeunload",()=>{if(q.release(),g.players.length===0){localStorage.removeItem("wargame-savegame");return}localStorage.setItem("wargame-savegame",JSON.stringify({round:g.round,current_phase:g.current_phase,current_player_id:g.current_player_id,players:g.players.map(({name:e,type:t,color:r})=>({name:e,type:t,color:r})),board:[...g.board.values()].map(({cx:e,cy:t,x:r,y:a,q:n,r:o,s:l,biome:u,elevation:m,humidity:s,temperature:f})=>({cx:e,cy:t,x:r,y:a,q:n,r:o,s:l,biome:u,elevation:m,humidity:s,temperature:f,owner:-1}))}))});ae.addEventListener("submit",e=>{e.preventDefault(),e.submitter.id==="new-game-btn"?(b.dataset.priorSave==="true"&&(g.board=P(g.board),g.clear_players()),Array.from({length:2},(t,r)=>D(r+1)),b.classList.add("game-config")):(g.run(),b.close())});se.addEventListener("click",()=>{g.board=P(g.board)});oe.addEventListener("submit",e=>{e.preventDefault(),g.players=Array.from(E,t=>{const r=t.querySelector(".player-name-input").value,a=t.querySelector(".player-type-select-radio:checked").value;return R(r,a)}),g.run(),b.close()});ce.addEventListener("click",()=>{E.length!==5&&D(E.length+1)});j.addEventListener("click",({target:e})=>{e.closest(".delete-player-btn")&&E.length!==2&&(e.closest(".player-config").remove(),[...E].forEach((t,r)=>{r=r+1,Object.assign(t.querySelector(".player-name-input"),{name:`player-${r}-name`,value:`Player ${r}`}),t.querySelectorAll(".player-type-select-radio").forEach(a=>{a.name=`player-${r}-type`})}))});b.addEventListener("cancel",e=>e.preventDefault());ne.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});v.addEventListener("click",({target:e})=>{const t=e.closest(".cell");if(!t)return;const r=v.querySelector(".clicked"),a=g.board.get(t);r&&(r.classList.remove("clicked"),v.querySelectorAll(".adjacent-to-clicked").forEach(n=>n.classList.remove("adjacent-to-clicked")),r===t)||(t.classList.add("clicked"),a.neighbors.forEach(({cell:n})=>n.classList.add("adjacent-to-clicked")))});v.addEventListener("pointerover",({target:e})=>{const t=e.closest(".cell");if(!t)return;const r=g.board.get(t);re.textContent=`
        biome: ${r.biome},
        temperature: ${r.temperature},
        humidity: ${r.humidity},
        elevation: ${r.elevation}
    `});
