(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function r(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(o){if(o.ep)return;o.ep=!0;const a=r(o);fetch(o.href,a)}})();const fe=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(fe).catch(console.error);let N;W(),document.addEventListener("visibilitychange",()=>{document.hidden?_e():W()});async function W(){var e,t;N=await((t=(e=navigator.wakeLock)==null?void 0:e.request)==null?void 0:t.call(e,"screen"))}async function _e(){N&&(await N.release(),N=void 0)}const v={width:30,height:24};function D(e){return e%2===0}function he(e,t,r){return e>=t&&e<=r}function ye(e,t=0,r=e.length){return e[T(r,t)]}function T(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function V(e){e.forEach(t=>{t.neighbors=ge(t,e,v)})}function ge({q:e,r:t,s:r,x:i,y:o},a,s){const p=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(l=>a.find(g=>g.q===e+l.q&&g.r===t+l.r&&g.s===r+l.s)).filter(Boolean);return i===0&&(p.push(a.find(l=>o===l.y&&l.x===s.width-1)),D(o)&&p.push(...[o<s.height-1?a.find(l=>o+1===l.y&&l.x===s.width-1):null,o>0?a.find(l=>o-1===l.y&&l.x===s.width-1):null].filter(Boolean))),i===s.width-1&&(p.push(a.find(l=>o===l.y&&l.x===0)),D(o)||p.push(...[o<s.height-1?a.find(l=>o+1===l.y&&l.x===0):null,o>0?a.find(l=>o-1===l.y&&l.x===0):null].filter(Boolean))),p}const m={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function G(e){e.forEach(t=>{const r=Math.random(),i=-1,o=he(r,.3,.7)?0:1*(-1*+(r<.3)),a=(s=>s<0?0:s>v.height-1?v.height-1:s)(t.y+o+i);t.temperature=ve(a)})}function ve(e){switch(e){case 0:case 1:case v.height-2:case v.height-1:return m.freezing;case 2:case 3:case v.height-4:case v.height-3:return m.cold;case 4:case 5:case v.height-6:case v.height-5:return m.temperate;case 6:case 7:case 8:case v.height-9:case v.height-8:case v.height-7:return m.warm;default:return m.hot}}function we(e){switch(e){case m.hot:return m.warm;case m.warm:return m.temperate;case m.temperate:return m.cold;default:return m.freezing}}function be(e){switch(e){case m.freezing:return m.cold;case m.cold:return m.temperate;case m.temperate:return m.warm;default:return m.hot}}const Y=new Set([0,1,2,v.height-1,v.height-2,v.height-3]);function X(e){const i=e.length/2.5;let o=0;for(;o<i;){const a=T(13,4),s={x:T(v.width),y:T(v.height-3,3)},c=e.find(({x:g,y:w})=>g===s.x&&w===s.y),p=new Set(c.neighbors.filter(({y:g})=>!Y.has(g))),l=new Set;o+=a,x(c),l.add(c);for(let g=0;g<a;g+=1){const w=ye([...p]);x(w),l.add(w),p.delete(w),w.neighbors.filter(f=>!l.has(f)).filter(({y:f})=>!Y.has(f)).forEach(f=>p.add(f))}}e.filter(a=>a.elevation>0).forEach(a=>{const s=a.neighbors.filter(p=>p.elevation>0).length;if(s>=3)return;const c=Math.random();(s===2&&c>.7||s===1&&c<.7)&&Ee(a)})}function x(e){e.elevation+=1,e.elevation>1&&(e.temperature=we(e.temperature))}function Ee(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=be(e.temperature))}const d={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function $e(e){switch(e){case d.arid:return d.dry;case d.dry:return d.moderate;case d.moderate:return d.moist;default:return d.wet}}function Z(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:r})=>r===u.sea).forEach(()=>{t.humidity=$e(t.humidity)})})}const n={people:"people",gold:"gold",cloth:"cloth",wood:"wood",stone:"stone",iron:"iron",food:"food",alcohol:"alcohol"},u={sea:new b("sea",{[n.food]:1}),mountain:new b("mountain",{[n.wood]:2,[n.stone]:5,[n.food]:3}),high_mountain:new b("high_mountain",{[n.stone]:5}),ice:new b("ice",{[n.food]:2}),tundra:new b("tundra",{[n.cloth]:1,[n.wood]:2,[n.stone]:1,[n.food]:5}),grassland:new b("grassland",{[n.cloth]:3,[n.wood]:2,[n.stone]:2,[n.food]:5}),savanna:new b("savanna",{[n.cloth]:5,[n.wood]:5,[n.stone]:3,[n.food]:6}),boreal_forest:new b("boreal_forest",{[n.cloth]:4,[n.wood]:10,[n.stone]:3,[n.food]:5}),forest:new b("forest",{[n.cloth]:2,[n.wood]:10,[n.stone]:2,[n.food]:5}),tropical_rainforest:new b("tropical_rainforest",{[n.cloth]:3,[n.wood]:7,[n.stone]:1,[n.food]:5}),cold_swamp:new b("cold_swamp",{[n.cloth]:1,[n.wood]:2,[n.stone]:1,[n.food]:2}),swamp:new b("swamp",{[n.cloth]:1,[n.wood]:1,[n.stone]:0,[n.food]:3}),tropical_swamp:new b("tropical_swamp",{[n.cloth]:1,[n.wood]:3,[n.stone]:1,[n.food]:3}),desert:new b("desert",{[n.cloth]:1,[n.wood]:0,[n.stone]:2,[n.food]:1}),extreme_desert:new b("extreme_desert",{[n.cloth]:0,[n.wood]:0,[n.stone]:1,[n.food]:0})},Le={[m.freezing]:{[d.arid]:u.tundra,[d.dry]:u.tundra,[d.moderate]:u.tundra,[d.moist]:u.boreal_forest,[d.wet]:u.boreal_forest},[m.cold]:{[d.arid]:u.tundra,[d.dry]:u.tundra,[d.moderate]:u.boreal_forest,[d.moist]:u.boreal_forest,[d.wet]:u.boreal_forest},[m.temperate]:{[d.arid]:u.tundra,[d.dry]:u.forest,[d.moderate]:u.forest,[d.moist]:u.forest,[d.wet]:u.swamp},[m.warm]:{[d.arid]:u.desert,[d.dry]:u.grassland,[d.moderate]:u.savanna,[d.moist]:u.forest,[d.wet]:u.tropical_swamp},[m.hot]:{[d.arid]:u.extreme_desert,[d.dry]:u.desert,[d.moderate]:u.grassland,[d.moist]:u.savanna,[d.wet]:u.tropical_rainforest}};function b(e="",t={},r=1,i=1){return{name:e,resource_production:Object.assign({[n.gold]:0,[n.cloth]:0,[n.wood]:0,[n.stone]:0,[n.iron]:0,[n.food]:0,[n.alcohol]:0},t),movement_speed:r,pleasantness:i}}function ee(e){e.forEach(t=>{t.biome=qe(t)})}function te(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=Se(t)})}function Se(e,t=v.height){const r=Math.random();return[0,t-1].includes(e.y)?r<=.1?u.sea:u.ice:[1,t-2].includes(e.y)?r<=.75?u.sea:u.ice:[2,t-3].includes(e.y)?r<=.9?u.sea:u.ice:u.sea}function qe(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?u.high_mountain:u.mountain:Le[e.temperature][e.humidity]}const Oe=document.getElementById("add-player-btn"),j=document.getElementById("board"),H=document.getElementById("bottom-bar"),Me=document.getElementById("cell-info"),B=document.getElementById("cell-production-forecast"),ke=document.getElementById("toggle-coord-system-btn"),K=document.getElementById("config-game-form"),re=document.getElementById("defs"),ne=document.getElementById("end-turn-btn"),U=document.getElementById("overall-production-forecast"),Be=document.getElementById("phase-label"),I=document.getElementsByClassName("player-config"),Ie=document.getElementById("player-name"),oe=document.getElementById("player-setup"),Ce=document.getElementById("reroll-map-btn"),Pe=document.getElementById("side-bar");document.getElementById("round-info");const J=document.getElementById("selection-highlight"),ze=document.getElementById("start-game-form"),q=document.getElementById("start-game-overlay"),Ne=re.querySelector(".cell-wrapper"),Te=re.querySelector(".player-border"),je=document.getElementById("player-config-tmpl").content,C={tent:M("Tent",[h(n.wood,1),h(n.cloth,3)],[]),textile_factory:M("Textile Factory",[h(n.wood,15),h(n.stone,15)],[h(n.cloth,5)]),lumber_mill:M("Lumber Mill",[h(n.wood,15),h(n.stone,15)],[h(n.wood,5)]),quarry:M("Quarry",[h(n.wood,15),h(n.stone,15)],[h(n.stone,5)]),forge:M("Forge",[h(n.wood,5),h(n.stone,5)],[h(n.iron,1)]),farm:M("Farm",[h(n.wood,5),h(n.stone,5)],[h(n.food,5)]),distillery:M("Distillery",[h(n.wood,5),h(n.stone,5)],[h(n.alcohol,1)])};function M(e="Pretty Structure",t=[h(n.wood,5)],r=[h(n.wood,1)],i=1,o={on(s){s.foo+=5},off(s){s.foo-=5}},a=[u.swamp]){return{display_name:e,construction_cost:t,unsupported_biomes:a,effects:o,output:r,required_workers:i}}function h(e=n.wood,t=1){return{resource_name:e,amount:t}}function ae(e,t,r,i,o,a,s){const c=Ae(e,t,r,i,o,a,s),p=c.querySelector(".population-size");let l=null,g=-1,w=0;return{cx:e,cy:t,x:r,y:i,q:o,r:a,s,neighbors:[],cell:c,elevation:0,humidity:d.arid,temperature:m.freezing,get population(){return w},set population(f){w=f,p.textContent=w>0?w:""},structures:new Map(Object.values(C).map(f=>[f,0])),resources:{},get biome(){return l},set biome(f){l!==null&&c.classList.remove(l.name),f!==null&&c.classList.add(f.name),l=f},get owner_id(){return g},set owner_id(f){g=f,f!==-1&&(c.dataset.owner_id=f)}}}function Ae(e,t,r,i,o,a,s){const c=Ne.cloneNode(!0);return c.setAttribute("transform",`translate(${e}, ${t})`),c.querySelector(".q-coord").textContent=o,c.querySelector(".r-coord").textContent=a,c.querySelector(".s-coord").textContent=s,c.querySelector(".offset-coords").textContent=`${r}, ${i}`,j.prepend(c),c}function ie(e){const t=[...e.values()];return t.forEach(r=>Object.assign(r,{biome:null,elevation:0,humidity:d.arid,temperature:m.freezing,population:0,owner_id:-1})),G(t),X(t),te(t),Z(t),ee(t),e}function Re(e,t){const r=e.map(({cx:i,cy:o,x:a,y:s,q:c,r:p,s:l,biome_name:g,elevation:w,humidity:f,temperature:P,owner_id:y,population:me})=>Object.assign(ae(i,o,a,s,c,p,l),{biome:u[g],elevation:w,humidity:f,temperature:P,owner_id:y,population:me}));return V(r),se(r,t)}function De(e,t){const r=He(e);return V(r),G(r),X(r),te(r),Z(r),ee(r),se(r,t)}function se(e,t){return e.reduce((r,i)=>(r.set(i.cell,i),r),t)}function He({height:e,width:t}){const r=[];for(let i=0;i<e;i+=1){const o=+!D(i);for(let a=0;a<t;a+=1){const s=a-(i-(i&1))/2;r.push(ae(a*6+o*3,i*4.5,a,i,s,i,-s-i))}}return r}const ce=.5,S=ce*.5;function le(e,t,r){const i=[];e.reduce((a,s)=>{const c=s.neighbors.filter(y=>!e.includes(y)),p=Ue(s),l=Fe(s),g=xe(s),w=We(s),f=Ye(s),P=Je(s);return c.find(y=>y.r===s.r&&y.s===s.s+1)&&a.push(`M${w}L${P}`),c.find(y=>y.q===s.q&&y.s===s.s+1)&&a.push(`M${P}L${p}`),c.find(y=>y.s===s.s&&y.r===s.r-1)&&a.push(`M${p}L${f}`),c.find(y=>y.r===s.r&&y.s===s.s-1)&&a.push(`M${f}L${g}`),c.find(y=>y.q===s.q&&y.s===s.s-1)&&a.push(`M${g}L${l}`),c.find(y=>y.s===s.s&&y.r===s.r+1)&&a.push(`M${l}L${w}`),a},i);const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d",i.join("")),o.setAttribute("stroke",t),o.setAttribute("stroke-width",ce),r.append(o)}function Ue(e){return`${e.cx+3} ${e.cy+S}`}function Fe(e){return`${e.cx+3} ${e.cy+6-S}`}function Je(e){return`${e.cx+S} ${e.cy+1.5+S*.5}`}function We(e){return`${e.cx+S} ${e.cy+4.5-S*.5}`}function Ye(e){return`${e.cx+6-S} ${e.cy+1.5+S*.5}`}function xe(e){return`${e.cx+6-S} ${e.cy+4.5-S*.5}`}const Ke={human:"human",ai:"ai"};function ue(e){const t=je.cloneNode(!0);Object.assign(t.querySelector(".player-name-input"),{name:`player-${e}-name`,value:`Player ${e}`}),t.querySelectorAll(".player-type-select-radio").forEach(r=>{r.name=`player-${e}-type`}),oe.append(t)}function de(e,t="Player Name",r=Ke.ai){const i=[],o=Te.cloneNode(!0);return j.append(o),{name:t,type:r,resources:{[n.people]:5,[n.gold]:5,[n.cloth]:25,[n.wood]:25,[n.stone]:25,[n.iron]:0,[n.food]:50,[n.alcohol]:5},border_path_container:o,get cells(){return i},set cells(a){i.push(...a),le(i,`var(--player-${e+1})`,o)},destroy(){i.length=0,o.remove()}}}function A(e,t=1){const r={[n.people]:0,[n.gold]:0,[n.cloth]:0,[n.wood]:0,[n.stone]:0,[n.iron]:0,[n.food]:0,[n.alcohol]:0};let i=0;return e.forEach(o=>{i+=o.population,Object.entries(o.biome.resource_production).forEach(([a,s])=>{r[a]+=s}),[...o.structures.entries()].forEach(([a,s])=>{a.output.forEach(({resource_name:c,amount:p})=>{r[c]+=p*s})});for(let a=0;a<Math.floor(o.population/2);a+=1){const s=Math.random();s<.3?r[n.people]+=2:s<.8&&(r[n.people]+=1)}}),r[n.gold]=i*t,r}let O=null;const E={land_grab:z("land_grab","Pick your origin","Confirm choice",(e,t)=>{if(e.owner_id===-1&&e.biome!==u.sea){const r=e.biome.resource_production,i=Object.values(C).filter(o=>!o.unsupported_biomes.includes(e.biome)).map(({display_name:o})=>`<li>${o}</li>`).join("");O=t,t.classList.add("clicked"),le([...e.neighbors,e],"white",J),B.innerHTML=`
            <h2>Cell Info</h2>
            <div>Biome: ${e.biome.name}</div>
            <div>Movement modifier: ${e.biome.movement_speed}</div>
            <div>Pleasantness: ${e.biome.pleasantness}</div>
            ...
            <h3>Production</h3>
            <div>Wood: ${r.wood}</div>
            <div>Stone: ${r.stone}</div>
            <div>Cloth: ${r.cloth}</div>
            <div>Food: ${r.food}</div>
            <h3>Supported structures</h3>
            <ul>${i}</ul>
            `}else B.replaceChildren()}),development:z("development","Distribute your wealth",void 0,(e,t,r)=>{if(e.owner_id!==r.current_player_id){const i=A(r.active_player.cells,r.active_player.tax_rate),o=Object.entries(i).map(([a,s])=>`<li>${a}: ${s}</li>`).join("");B.replaceChildren(),U.innerHTML=`
                <h2>Empire Overview</h2>
                <h3>Population</h3>
                ...
                <h3>Production</h3>
                <ul>
                    ${o}
                </ul>
                <form>
                    <h3>Tax Rate</h3>
                    <input
                        type="range"
                        name="tax_rate"
                        min="0"
                        step="1"
                        value="${r.active_player.tax_rate}"
                    >
                </form>
                `}else{const i=Object.entries(C).map(([s,c])=>`
                <label>
                    <div class="label-text">${c.display_name}: </div>
                    <input
                        type="number"
                        class="structure-builder"
                        name="${s}"
                        value="${e.structures.get(c)}"
                        min="0"
                    >
                </label>`).join(""),o=A([e],r.active_player.tax_rate),a=Object.entries(o).map(([s,c])=>`<li>${s}: ${c}</li>`).join("");O=e,U.replaceChildren(),B.innerHTML=`
                <h2>Cell Overview</h2>
                <h3>Cell Output</h3>
                <ul>
                    ${a}
                </ul>
                <form>
                    <h3>Build Structures</h3>
                    ${i}
                </form>`}}),movement_planning:z("movement_planning","Make your moves"),movement_execution:z("movement_execution","See what you have done")};function Qe(e){return({target:t})=>{const r=Number(t.value);if(t.name==="tax_rate")e.active_player.tax_rate=r;else if(t.classList.contains("structure-builder")){const i=C[t.name],o=O.structures.get(i);if(r<0){t.value=o;return}const a=C[t.name].construction_cost;if(r>o){if(a.some(({resource_name:p,amount:l})=>l>e.active_player.resources[p])){t.value=o;return}a.forEach(({resource_name:p,amount:l})=>{e.active_player.resources[p]-=l})}else a.forEach(({resource_name:c,amount:p})=>{e.active_player.resources[c]+=p});O.structures.set(i,r),B.querySelector("ul").innerHTML=Object.entries(A([O],e.active_player.tax_rate)).map(([c,p])=>`<li>${c}: ${p}</li>`).join(""),e.update_resource_display()}}}function Ve(e){return()=>{if(e.current_phase===E.land_grab.name){if(O===null)return;const t=e.board.get(O);Object.assign(t,{owner_id:e.current_player_id,population:e.active_player.resources[n.people]}),e.active_player.cells=[t],O=null}e.next_turn()}}function z(e="round_phase",t=e,r="End turn",i=()=>{}){return{name:e,call_to_action:t,end_turn_btn_label:r,handler_function:i}}const L=[];let R=0,k=E.land_grab.name,$=0,F=null;const _={board:new Map,get round(){return R},set round(e){R=e},get active_player(){return L[$]},get players(){return L},set players(e){L.push(...e)},get current_player_id(){return $},set current_player_id(e){$=e},get current_player_total_production(){return F},clear_players(){L.forEach(e=>e.destroy()),L.length=0},get current_phase(){return k},set current_phase(e){k=e},update_resource_display:pe,next_turn(){J.replaceChildren(),$===L.length-1?($=0,k=(()=>{switch(k){case E.development.name:return E.movement_planning.name;case E.movement_planning.name:return E.movement_execution.name;default:return R+=1,E.development.name}})()):$+=1,Q()},run:Q};function Q(){ne.textContent=E[k].end_turn_btn_label,Be.textContent=E[k].call_to_action,Ie.textContent=L[$].name,document.documentElement.style.setProperty("--active-player-color",`var(--player-${$+1}`),k===E.development.name?(F=A(L[$].cells,L[$].tax_rate),B.replaceChildren(),U.innerHTML=`
                <h2>Totall Output</h2>
                <ul>
                    ${Object.entries(F).map(([e,t])=>`<li>${e}: ${t}</li>`).join("")}
                </ul>
                <form>
                    <h2>Tax Rate</h2>
                    <input type="range" name="tax_rate">
                </form>
                `,H.classList.remove("content-hidden"),pe()):H.classList.add("content-hidden")}function pe(){H.replaceChildren(...Object.entries(L[$].resources).map(([e,t])=>Object.assign(document.createElement("div"),{textContent:`${e}: ${t}`})))}function Ge(e,t){const r=JSON.parse(t);Object.assign(e,{round:r.round,current_phase:r.current_phase,current_player_id:r.current_player_id,players:r.players.map(({name:i,type:o},a)=>de(a,i,o)),board:Re(r.board,e.board)}),e.players.forEach((i,o)=>{i.cells=[...e.board.values()].filter(a=>a.owner_id===o)})}function Xe(){if(_.players.length===0){localStorage.removeItem("wargame-savegame");return}localStorage.setItem("wargame-savegame",JSON.stringify({round:_.round,current_phase:_.current_phase,current_player_id:_.current_player_id,players:_.players.map(({name:e,type:t})=>({name:e,type:t})),board:[..._.board.values()].map(({cx:e,cy:t,x:r,y:i,q:o,r:a,s,biome:{name:c},elevation:p,humidity:l,temperature:g,owner_id:w,population:f})=>({cx:e,cy:t,x:r,y:i,q:o,r:a,s,biome_name:c,elevation:p,humidity:l,temperature:g,owner_id:w,population:f}))}))}window.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("wargame-savegame"),t=e!==null;q.dataset.priorSave=t,q.showModal(),t?Ge(_,e):_.board=De(v,_.board)},{once:!0});window.addEventListener("beforeunload",Xe);document.addEventListener("submit",e=>e.preventDefault());ze.addEventListener("submit",e=>{if(e.submitter.id==="new-game-btn")q.dataset.priorSave==="true"&&(Object.assign(_,{round:0,current_phase:E.land_grab.name,current_player_id:0}),_.board=ie(_.board),_.clear_players()),Array.from({length:2},(t,r)=>ue(r+1)),q.classList.add("game-config");else{if(q.dataset.priorSave==="false")return;_.run(),q.close()}});Ce.addEventListener("click",()=>{_.board=ie(_.board)});ne.addEventListener("click",Ve(_));K.addEventListener("submit",()=>{const e=new Set,t=[...K.querySelectorAll(".player-name-input")];if(t.reduce((r,{value:i})=>(r[i]=i in r?r[i]+1:1,r[i]>1&&e.add(i),r),{}),e.size>0){t.forEach(r=>{e.has(r.value)&&r.classList.add("invalid")});return}_.players=Array.from(I,(r,i)=>{const o=r.querySelector(".player-name-input").value,a=r.querySelector(".player-type-select-radio:checked").value;return de(i,o,a)}),_.run(),q.close()});Oe.addEventListener("click",()=>{I.length!==5&&ue(I.length+1)});oe.addEventListener("click",({target:e})=>{e.closest(".delete-player-btn")&&I.length!==2&&(e.closest(".player-config").remove(),[...I].forEach((t,r)=>{r=r+1,Object.assign(t.querySelector(".player-name-input"),{name:`player-${r}-name`,value:`Player ${r}`}),t.querySelectorAll(".player-type-select-radio").forEach(i=>{i.name=`player-${r}-type`})}))});q.addEventListener("cancel",e=>e.preventDefault());j.addEventListener("click",({target:e})=>{const t=e.closest(".cell-wrapper");if(!t)return;const r=j.querySelector(".clicked"),i=_.board.get(t);r&&(r.classList.remove("clicked"),J.replaceChildren(),r===t)||(Ze(i),E[_.current_phase].handler_function(i,t,_))});Pe.addEventListener("input",Qe(_));document.querySelector("h1").addEventListener("dblclick",()=>{document.body.classList.toggle("debug")});ke.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});function Ze(e){Me.textContent=JSON.stringify(e,(t,r)=>t==="neighbors"?void 0:r,4)}
