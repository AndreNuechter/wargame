(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function r(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(o){if(o.ep)return;o.ep=!0;const n=r(o);fetch(o.href,n)}})();const ie=""+new URL("service-worker.js",import.meta.url).href;window.navigator.serviceWorker.register(ie).catch(console.error);let M;async function ce(){var e,t;M=await((t=(e=navigator.wakeLock)==null?void 0:e.request)==null?void 0:t.call(e,"screen"))}async function le(){M&&(await M.release(),M=void 0)}const U={request:ce,release:le},g={width:30,height:24};function A(e){return e%2===0}function de(e,t,r){return e>=t&&e<=r}function ue(e,t=0,r=e.length){return e[j(r,t)]}function j(e,t=0){return Math.trunc(Math.random()*(e-t)+t)}function J(e){e.forEach(t=>{t.neighbors=me(t,e,g)})}function me({q:e,r:t,s:r,x:s,y:o},n,i){const f=[{q:1,r:0,s:-1},{q:1,r:-1,s:0},{q:0,r:1,s:-1},{q:0,r:-1,s:1},{q:-1,r:0,s:1},{q:-1,r:1,s:0}].map(c=>n.find(p=>p.q===e+c.q&&p.r===t+c.r&&p.s===r+c.s)).filter(Boolean);return s===0&&(f.push(n.find(c=>o===c.y&&c.x===i.width-1)),A(o)&&f.push(...[o<i.height-1?n.find(c=>o+1===c.y&&c.x===i.width-1):null,o>0?n.find(c=>o-1===c.y&&c.x===i.width-1):null].filter(Boolean))),s===i.width-1&&(f.push(n.find(c=>o===c.y&&c.x===0)),A(o)||f.push(...[o<i.height-1?n.find(c=>o+1===c.y&&c.x===0):null,o>0?n.find(c=>o-1===c.y&&c.x===0):null].filter(Boolean))),f}const _={freezing:"freezing",cold:"cold",temperate:"temperate",warm:"warm",hot:"hot"};function W(e){e.forEach(t=>{const r=Math.random(),s=-1,o=de(r,.3,.7)?0:1*(-1*+(r<.3)),n=(i=>i<0?0:i>g.height-1?g.height-1:i)(t.y+o+s);t.temperature=pe(n)})}function pe(e){switch(e){case 0:case 1:case g.height-2:case g.height-1:return _.freezing;case 2:case 3:case g.height-4:case g.height-3:return _.cold;case 4:case 5:case g.height-6:case g.height-5:return _.temperate;case 6:case 7:case 8:case g.height-9:case g.height-8:case g.height-7:return _.warm;default:return _.hot}}function fe(e){switch(e){case _.hot:return _.warm;case _.warm:return _.temperate;case _.temperate:return _.cold;default:return _.freezing}}function _e(e){switch(e){case _.freezing:return _.cold;case _.cold:return _.temperate;case _.temperate:return _.warm;default:return _.hot}}const x=new Set([0,1,2,g.height-1,g.height-2,g.height-3]);function Y(e){const s=e.length/2.5;let o=0;for(;o<s;){const n=j(13,4),i={x:j(g.width),y:j(g.height-3,3)},d=e.find(({x:p,y})=>p===i.x&&y===i.y),f=new Set(d.neighbors.filter(({y:p})=>!x.has(p))),c=new Set;o+=n,R(d),c.add(d);for(let p=0;p<n;p+=1){const y=ue([...f]);R(y),c.add(y),f.delete(y),y.neighbors.filter(w=>!c.has(w)).filter(({y:w})=>!x.has(w)).forEach(w=>f.add(w))}}e.filter(n=>n.elevation>0).forEach(n=>{const i=n.neighbors.filter(f=>f.elevation>0).length;if(i>=3)return;const d=Math.random();(i===2&&d>.7||i===1&&d<.7)&&he(n)})}function R(e){e.elevation+=1,e.elevation>1&&(e.temperature=fe(e.temperature))}function he(e){e.elevation=Math.max(0,e.elevation-1),e.elevation>0&&(e.temperature=_e(e.temperature))}const m={arid:"arid",dry:"dry",moderate:"moderate",moist:"moist",wet:"wet"};function ge(e){switch(e){case m.arid:return m.dry;case m.dry:return m.moderate;case m.moderate:return m.moist;default:return m.wet}}function F(e){e.filter(t=>t.elevation>0).forEach(t=>{t.neighbors.filter(({biome:r})=>r===l.sea).forEach(()=>{t.humidity=ge(t.humidity)})})}const a={people:"people",gold:"gold",cloth:"cloth",wood:"wood",stone:"stone",iron:"iron",food:"food",alcohol:"alcohol"},l={sea:new b("sea",{[a.food]:1}),mountain:new b("mountain",{[a.wood]:2,[a.stone]:5,[a.food]:3}),high_mountain:new b("high_mountain",{[a.stone]:5}),ice:new b("ice",{[a.food]:2}),tundra:new b("tundra",{[a.cloth]:1,[a.wood]:2,[a.stone]:1,[a.food]:5}),grassland:new b("grassland",{[a.cloth]:3,[a.wood]:2,[a.stone]:2,[a.food]:5}),savanna:new b("savanna",{[a.cloth]:5,[a.wood]:5,[a.stone]:3,[a.food]:6}),boreal_forest:new b("boreal_forest",{[a.cloth]:4,[a.wood]:10,[a.stone]:3,[a.food]:5}),forest:new b("forest",{[a.cloth]:2,[a.wood]:10,[a.stone]:2,[a.food]:5}),tropical_rainforest:new b("tropical_rainforest",{[a.cloth]:3,[a.wood]:7,[a.stone]:1,[a.food]:5}),cold_swamp:new b("cold_swamp",{[a.cloth]:1,[a.wood]:2,[a.stone]:1,[a.food]:2}),swamp:new b("swamp",{[a.cloth]:1,[a.wood]:1,[a.stone]:0,[a.food]:3}),tropical_swamp:new b("tropical_swamp",{[a.cloth]:1,[a.wood]:3,[a.stone]:1,[a.food]:3}),desert:new b("desert",{[a.cloth]:1,[a.wood]:0,[a.stone]:2,[a.food]:1}),extreme_desert:new b("extreme_desert",{[a.cloth]:0,[a.wood]:0,[a.stone]:1,[a.food]:0})},ye={[_.freezing]:{[m.arid]:l.tundra,[m.dry]:l.tundra,[m.moderate]:l.tundra,[m.moist]:l.boreal_forest,[m.wet]:l.boreal_forest},[_.cold]:{[m.arid]:l.tundra,[m.dry]:l.tundra,[m.moderate]:l.boreal_forest,[m.moist]:l.boreal_forest,[m.wet]:l.boreal_forest},[_.temperate]:{[m.arid]:l.tundra,[m.dry]:l.forest,[m.moderate]:l.forest,[m.moist]:l.forest,[m.wet]:l.swamp},[_.warm]:{[m.arid]:l.desert,[m.dry]:l.grassland,[m.moderate]:l.savanna,[m.moist]:l.forest,[m.wet]:l.tropical_swamp},[_.hot]:{[m.arid]:l.extreme_desert,[m.dry]:l.desert,[m.moderate]:l.grassland,[m.moist]:l.savanna,[m.wet]:l.tropical_rainforest}};function b(e="",t={},r=1,s=1){return{name:e,resource_production:Object.assign({[a.gold]:0,[a.cloth]:0,[a.wood]:0,[a.stone]:0,[a.iron]:0,[a.food]:0,[a.alcohol]:0},t),movement_speed:r,pleasantness:s}}function K(e){e.forEach(t=>{t.biome=be(t)})}function V(e){e.filter(({elevation:t})=>t===0).forEach(t=>{t.biome=we(t)})}function we(e,t=g.height){const r=Math.random();return[0,t-1].includes(e.y)?r<=.1?l.sea:l.ice:[1,t-2].includes(e.y)?r<=.75?l.sea:l.ice:[2,t-3].includes(e.y)?r<=.9?l.sea:l.ice:l.sea}function be(e){return e.biome?e.biome:e.elevation>1?e.elevation>2?l.high_mountain:l.mountain:ye[e.temperature][e.humidity]}const G=document.createElement("style");G.textContent=Object.keys(l).map(e=>`[data-biome="${e}"] {
        fill: var(--${e});
    }`).join(`
`);document.body.append(G);const ve=document.getElementById("add-player-btn"),C=document.getElementById("board"),N=document.getElementById("bottom-bar"),Ee=document.getElementById("cell-info"),O=document.getElementById("cell-production-forecast"),$e=document.getElementById("toggle-coord-system-btn"),D=document.getElementById("config-game-form"),Q=document.getElementById("defs"),X=document.getElementById("end-turn-btn"),z=document.getElementById("overall-production-forecast"),Le=document.getElementById("phase-label"),k=document.getElementsByClassName("player-config"),Se=document.getElementById("player-name"),Z=document.getElementById("player-setup"),Oe=document.getElementById("reroll-map-btn");document.getElementById("round-info");const H=document.getElementById("selection-highlight"),ke=document.getElementById("start-game-form"),L=document.getElementById("start-game-overlay"),qe=Q.querySelector(".cell-wrapper"),Be=Q.querySelector(".player-border"),Ie=document.getElementById("player-config-tmpl").content;function ee(e,t,r,s,o,n,i){const d=Me(e,t,r,s,o,n,i);let f=null,c=-1;return{cx:e,cy:t,x:r,y:s,q:o,r:n,s:i,neighbors:[],cell:d,elevation:0,humidity:m.arid,temperature:_.freezing,population:0,structures:{},resources:{},get biome(){return f||""},set biome(p){f=p,p&&(d.dataset.biome=f.name)},get owner_id(){return c},set owner_id(p){p!==void 0&&(c=p,p!==-1&&(d.dataset.owner_id=p))}}}function Me(e,t,r,s,o,n,i){const d=qe.cloneNode(!0);d.setAttribute("transform",`translate(${e}, ${t})`);const f=document.createElementNS("http://www.w3.org/2000/svg","g"),c=document.createElementNS("http://www.w3.org/2000/svg","text"),p=document.createElementNS("http://www.w3.org/2000/svg","text"),y=document.createElementNS("http://www.w3.org/2000/svg","text"),w=document.createElementNS("http://www.w3.org/2000/svg","text");return c.textContent=o,p.textContent=n,y.textContent=i,w.textContent=`${r}, ${s}`,c.setAttribute("transform","translate(1.5, 2)"),p.setAttribute("transform","translate(4.5, 3.5)"),y.setAttribute("transform","translate(2, 5)"),w.setAttribute("transform","translate(1.5, 3.5)"),f.classList.add("cell-coord"),c.classList.add("cube-coord"),p.classList.add("cube-coord"),y.classList.add("cube-coord"),w.classList.add("offset-coord"),f.append(c,p,y,w),d.append(f),C.prepend(d),d}function te(e){const t=[...e.values()];return t.forEach(r=>Object.assign(r,{biome:null,elevation:0,humidity:m.arid,temperature:_.freezing,owner_id:-1})),W(t),Y(t),V(t),F(t),K(t),e}function je(e,t){const r=e.map(({cx:s,cy:o,x:n,y:i,q:d,r:f,s:c,biome_name:p,elevation:y,humidity:w,temperature:q,owner_id:h})=>Object.assign(ee(s,o,n,i,d,f,c),{biome:l[p],elevation:y,humidity:w,temperature:q,owner_id:h}));return J(r),re(r,t)}function Ce(e,t){const r=Ne(e);return J(r),W(r),Y(r),V(r),F(r),K(r),re(r,t)}function re(e,t){return e.reduce((r,s)=>(r.set(s.cell,s),r),t)}function Ne({height:e,width:t}){const r=[];for(let s=0;s<e;s+=1){const o=+!A(s);for(let n=0;n<t;n+=1){const i=n-(s-(s&1))/2;r.push(ee(n*6+o*3,s*4.5,n,s,i,s,-i-s))}}return r}const P={simple_housing:$([B(a.wood,1),B(a.cloth,1)],e=>{e.housing_capacity+=5}),textile_factory:$([B(a.wood,5),B(a.stone,5)],e=>{}),lumber_mill:$(),quarry:$(),mine:$(),forge:$(),farm:$(),distillery:$()};function $(e=[],t=()=>{},r=[],s=[],o=1){return{resource_cost:e,unsupported_biomes:r,effects:t,output:s,required_workers:o}}function B(e,t){return{resource_name:e,amount:t}}const ne=.5,E=ne*.5;function oe(e,t,r){const s=[];e.reduce((n,i)=>{const d=i.neighbors.filter(h=>!e.includes(h)),f=Ae(i),c=ze(i),p=Re(i),y=Te(i),w=xe(i),q=Pe(i);return d.find(h=>h.r===i.r&&h.s===i.s+1)&&n.push(`M${y}L${q}`),d.find(h=>h.q===i.q&&h.s===i.s+1)&&n.push(`M${q}L${f}`),d.find(h=>h.s===i.s&&h.r===i.r-1)&&n.push(`M${f}L${w}`),d.find(h=>h.r===i.r&&h.s===i.s-1)&&n.push(`M${w}L${p}`),d.find(h=>h.q===i.q&&h.s===i.s-1)&&n.push(`M${p}L${c}`),d.find(h=>h.s===i.s&&h.r===i.r+1)&&n.push(`M${c}L${y}`),n},s);const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d",s.join("")),o.setAttribute("stroke",t),o.setAttribute("stroke-width",ne),r.append(o)}function Ae(e){return`${e.cx+3} ${e.cy+E}`}function ze(e){return`${e.cx+3} ${e.cy+6-E}`}function Pe(e){return`${e.cx+E} ${e.cy+1.5+E*.5}`}function Te(e){return`${e.cx+E} ${e.cy+4.5-E*.5}`}function xe(e){return`${e.cx+6-E} ${e.cy+1.5+E*.5}`}function Re(e){return`${e.cx+6-E} ${e.cy+4.5-E*.5}`}const De={human:"human",ai:"ai"};function ae(e){const t=Ie.cloneNode(!0);Object.assign(t.querySelector(".player-name-input"),{name:`player-${e}-name`,value:`Player ${e}`}),t.querySelectorAll(".player-type-select-radio").forEach(r=>{r.name=`player-${e}-type`}),Z.append(t)}function se(e,t=De.ai,r){const s=[],o=Be.cloneNode(!0);return C.append(o),{name:e,color:r,type:t,resources:{[a.people]:5,[a.gold]:5,[a.cloth]:25,[a.wood]:25,[a.stone]:25,[a.iron]:0,[a.food]:50,[a.alcohol]:5},border_path_container:o,get cells(){return s},set cells(n){s.push(...n),oe(s,r,o)},destroy(){s.length=0,o.remove()}}}function T(e,t=1){const r={[a.people]:0,[a.gold]:0,[a.cloth]:0,[a.wood]:0,[a.stone]:0,[a.iron]:0,[a.food]:0,[a.alcohol]:0};let s=0;return e.forEach(o=>{s+=o.population,Object.entries(o.biome.resource_production).forEach(([n,i])=>{r[n]+=i}),Object.entries(o.structures).forEach(([n,i])=>{Object.entries(P[n].output).forEach(([d,f])=>{r[d]+=f*i})});for(let n=0;n<Math.floor(o.population/2);n+=1){const i=Math.random();i<.3?r[a.people]+=2:i<.8&&(r[a.people]+=1)}}),r[a.gold]=s*t,r}const v={land_grab:I("land_grab","Pick your origin","Confirm choice"),development:I("development","Distribute your wealth"),movement_planning:I("movement_planning","Make your moves"),movement_execution:I("movement_execution","See what you have done")};function I(e,t=e,r="End turn"){return{name:e,call_to_action:t,end_turn_btn_label:r}}const u=(()=>{const e=[];let t=0,r=v.land_grab.name,s=0;function o(){if(X.textContent=v[r].end_turn_btn_label,Le.textContent=v[r].call_to_action,Se.textContent=e[s].name,r===v.development.name){const n=T(e[s].cells,e[s].tax_rate);O.replaceChildren(),z.innerHTML=`
                <h2>Totall Output</h2>
                <ul>
                    ${Object.entries(n).map(([i,d])=>`<li>${i}: ${d}</li>`).join("")}
                </ul>
                <form>
                    <h2>Tax Rate</h2>
                    <input type="range">
                </form>
                `,N.classList.remove("content-hidden"),Object.entries(e[s].resources).forEach(([i,d])=>{try{N.querySelector(`[data-resource-name="${i}"]`).textContent=`${i}: ${d}`}catch{console.log("who cares rn?")}})}else N.classList.add("content-hidden")}return{board:new Map,get round(){return t},set round(n){t=n},get players(){return e},set players(n){e.push(...n)},get current_player_id(){return s},set current_player_id(n){s=n},clear_players(){e.forEach(n=>n.destroy()),e.length=0},get current_phase(){return r},set current_phase(n){r=n},next_turn(){s===e.length-1?(s=0,r=(()=>{switch(r){case v.development.name:return v.movement_planning.name;case v.movement_planning.name:return v.movement_execution.name;default:return t+=1,v.development.name}})()):s+=1,o()},run:o}})();function He(e,t){const r=JSON.parse(t);Object.assign(e,{round:r.round,current_phase:r.current_phase,current_player_id:r.current_player_id,players:r.players.map(({name:s,type:o,color:n})=>se(s,o,n)),board:je(r.board,e.board)}),e.players.forEach((s,o)=>{s.cells=[...e.board.values()].filter(n=>n.owner_id===o)})}let S=null;window.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("wargame-savegame"),t=e!==null;L.dataset.priorSave=t,L.showModal(),U.request(),t?He(u,e):u.board=Ce(g,u.board)},{once:!0});window.addEventListener("beforeunload",()=>{if(U.release(),u.players.length===0){localStorage.removeItem("wargame-savegame");return}localStorage.setItem("wargame-savegame",JSON.stringify({round:u.round,current_phase:u.current_phase,current_player_id:u.current_player_id,players:u.players.map(({name:e,type:t,color:r})=>({name:e,type:t,color:r})),board:[...u.board.values()].map(({cx:e,cy:t,x:r,y:s,q:o,r:n,s:i,biome:{name:d},elevation:f,humidity:c,temperature:p,owner_id:y})=>({cx:e,cy:t,x:r,y:s,q:o,r:n,s:i,biome_name:d,elevation:f,humidity:c,temperature:p,owner_id:y}))}))});ke.addEventListener("submit",e=>{if(e.preventDefault(),e.submitter.id==="new-game-btn")L.dataset.priorSave==="true"&&(Object.assign(u,{round:0,current_phase:v.land_grab.name,current_player_id:0}),u.board=te(u.board),u.clear_players()),Array.from({length:2},(t,r)=>ae(r+1)),L.classList.add("game-config");else{if(L.dataset.priorSave==="false")return;u.run(),L.close()}});Oe.addEventListener("click",()=>{u.board=te(u.board)});X.addEventListener("click",()=>{if(u.current_phase===v.land_grab.name){if(S===null)return;u.board.get(S).owner_id=u.current_player_id,u.players[u.current_player_id].cells=[u.board.get(S)],S=null}u.next_turn()});D.addEventListener("submit",e=>{e.preventDefault();const t=new Set,r=[...D.querySelectorAll(".player-name-input")];if(r.reduce((o,{value:n})=>(o[n]=n in o?o[n]+1:1,o[n]>1&&t.add(n),o),{}),t.size!==0){r.forEach(o=>{t.has(o.value)&&o.classList.add("invalid")});return}const s=["tomato","rebeccapurple","gold","aquamarine","hotpink"];u.players=Array.from(k,(o,n)=>{const i=o.querySelector(".player-name-input").value,d=o.querySelector(".player-type-select-radio:checked").value;return se(i,d,s[n])}),u.run(),L.close()});ve.addEventListener("click",()=>{k.length!==5&&ae(k.length+1)});Z.addEventListener("click",({target:e})=>{e.closest(".delete-player-btn")&&k.length!==2&&(e.closest(".player-config").remove(),[...k].forEach((t,r)=>{r=r+1,Object.assign(t.querySelector(".player-name-input"),{name:`player-${r}-name`,value:`Player ${r}`}),t.querySelectorAll(".player-type-select-radio").forEach(s=>{s.name=`player-${r}-type`})}))});L.addEventListener("cancel",e=>e.preventDefault());function Ue(e){Ee.textContent=JSON.stringify(e,(t,r)=>t==="neighbors"?void 0:r,4)}C.addEventListener("click",({target:e})=>{const t=e.closest(".cell-wrapper");if(!t)return;const r=C.querySelector(".clicked"),s=u.board.get(t);if(!(r&&(r.classList.remove("clicked"),H.replaceChildren(),S=null,r===t))){if(Ue(s),u.current_phase===v.land_grab.name)if(s.owner_id===-1&&s.biome!==l.sea){const o=s.biome.resource_production;S=t,t.classList.add("clicked"),oe([...s.neighbors,s],"white",H),O.innerHTML=`
            <h2>Cell Info</h2>
            <div>Biome: ${s.biome.name}</div>
            <div>Movement modifier: ${s.biome.movement_speed}</div>
            <div>Pleasantness: ${s.biome.pleasantness}</div>
            <h3>Production</h3>
            <div>Wood: ${o.wood}</div>
            <div>Stone: ${o.stone}</div>
            <div>Cloth: ${o.cloth}</div>
            <div>Food: ${o.food}</div>
            <h3>Supported structures</h3>
            <ul>
            ${Object.entries(P).filter(([,n])=>!n.unsupported_biomes.includes(s.biome)).map(([n])=>`<li>${n}</li>`).join("")}
        </ul>
            `}else O.replaceChildren();else if(u.current_phase===v.development.name)if(s.owner_id!==u.current_player_id){const o=T(u.players[u.current_player_id].cells,u.players[u.current_player_id].tax_rate);O.replaceChildren(),z.innerHTML=`
                <h2>Totall Output</h2>
                <ul>
                    ${Object.entries(o).map(([n,i])=>`<li>${n}: ${i}</li>`).join("")}
                </ul>
                <form>
                    <h2>Tax Rate</h2>
                    <input type="range">
                </form>
                `}else{const o=T([s],u.players[u.current_player_id].tax_rate);z.replaceChildren(),O.innerHTML=`
                <h2>Cell Output</h2>
                <ul>
                ${Object.entries(o).map(([n,i])=>`<li>${n}: ${i}</li>`).join("")}
                </ul>
                <form>
                <h2>Build Structures</h2>
                    ${Object.keys(P).map(n=>`<label><div class="label-text">${n}: </div><input type="number"></label>`).join("")}
                </form>`}}});$e.addEventListener("click",()=>{document.body.classList.toggle("use-offset-coords")});
